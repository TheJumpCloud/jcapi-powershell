// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6282, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace JumpCloud.SDK.V2.Models
{
    using static JumpCloud.SDK.V2.Runtime.Extensions;

    /// <summary>System Insights Sharing Preferences</summary>
    public partial class SystemInsightsSharingPreferences
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(JumpCloud.SDK.V2.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="JumpCloud.SDK.V2.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref JumpCloud.SDK.V2.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(JumpCloud.SDK.V2.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref JumpCloud.SDK.V2.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="JumpCloud.SDK.V2.Runtime.Json.JsonNode"/> into an instance of JumpCloud.SDK.V2.Models.ISystemInsightsSharingPreferences.
        /// </summary>
        /// <param name="node">a <see cref="JumpCloud.SDK.V2.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of JumpCloud.SDK.V2.Models.ISystemInsightsSharingPreferences.</returns>
        public static JumpCloud.SDK.V2.Models.ISystemInsightsSharingPreferences FromJson(JumpCloud.SDK.V2.Runtime.Json.JsonNode node)
        {
            return node is JumpCloud.SDK.V2.Runtime.Json.JsonObject json ? new SystemInsightsSharingPreferences(json) : null;
        }

        /// <summary>
        /// Deserializes a JumpCloud.SDK.V2.Runtime.Json.JsonObject into a new instance of <see cref="SystemInsightsSharingPreferences" />.
        /// </summary>
        /// <param name="json">A JumpCloud.SDK.V2.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal SystemInsightsSharingPreferences(JumpCloud.SDK.V2.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_bluetoothSharing = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("bluetooth_sharing"), out var __jsonBluetoothSharing) ? (int?)__jsonBluetoothSharing : BluetoothSharing;}
            {_collectionTime = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonString>("collection_time"), out var __jsonCollectionTime) ? (string)__jsonCollectionTime : (string)CollectionTime;}
            {_contentCaching = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("content_caching"), out var __jsonContentCaching) ? (int?)__jsonContentCaching : ContentCaching;}
            {_discSharing = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("disc_sharing"), out var __jsonDiscSharing) ? (int?)__jsonDiscSharing : DiscSharing;}
            {_fileSharing = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("file_sharing"), out var __jsonFileSharing) ? (int?)__jsonFileSharing : FileSharing;}
            {_internetSharing = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("internet_sharing"), out var __jsonInternetSharing) ? (int?)__jsonInternetSharing : InternetSharing;}
            {_printerSharing = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("printer_sharing"), out var __jsonPrinterSharing) ? (int?)__jsonPrinterSharing : PrinterSharing;}
            {_remoteAppleEvents = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("remote_apple_events"), out var __jsonRemoteAppleEvents) ? (int?)__jsonRemoteAppleEvents : RemoteAppleEvents;}
            {_remoteLogin = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("remote_login"), out var __jsonRemoteLogin) ? (int?)__jsonRemoteLogin : RemoteLogin;}
            {_remoteManagement = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("remote_management"), out var __jsonRemoteManagement) ? (int?)__jsonRemoteManagement : RemoteManagement;}
            {_screenSharing = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonNumber>("screen_sharing"), out var __jsonScreenSharing) ? (int?)__jsonScreenSharing : ScreenSharing;}
            {_systemId = If( json?.PropertyT<JumpCloud.SDK.V2.Runtime.Json.JsonString>("system_id"), out var __jsonSystemId) ? (string)__jsonSystemId : (string)SystemId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="SystemInsightsSharingPreferences" /> into a <see cref="JumpCloud.SDK.V2.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="JumpCloud.SDK.V2.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="JumpCloud.SDK.V2.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="SystemInsightsSharingPreferences" /> as a <see cref="JumpCloud.SDK.V2.Runtime.Json.JsonNode" />.
        /// </returns>
        public JumpCloud.SDK.V2.Runtime.Json.JsonNode ToJson(JumpCloud.SDK.V2.Runtime.Json.JsonObject container, JumpCloud.SDK.V2.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new JumpCloud.SDK.V2.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._bluetoothSharing ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._bluetoothSharing) : null, "bluetooth_sharing" ,container.Add );
            AddIf( null != (((object)this._collectionTime)?.ToString()) ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode) new JumpCloud.SDK.V2.Runtime.Json.JsonString(this._collectionTime.ToString()) : null, "collection_time" ,container.Add );
            AddIf( null != this._contentCaching ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._contentCaching) : null, "content_caching" ,container.Add );
            AddIf( null != this._discSharing ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._discSharing) : null, "disc_sharing" ,container.Add );
            AddIf( null != this._fileSharing ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._fileSharing) : null, "file_sharing" ,container.Add );
            AddIf( null != this._internetSharing ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._internetSharing) : null, "internet_sharing" ,container.Add );
            AddIf( null != this._printerSharing ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._printerSharing) : null, "printer_sharing" ,container.Add );
            AddIf( null != this._remoteAppleEvents ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._remoteAppleEvents) : null, "remote_apple_events" ,container.Add );
            AddIf( null != this._remoteLogin ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._remoteLogin) : null, "remote_login" ,container.Add );
            AddIf( null != this._remoteManagement ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._remoteManagement) : null, "remote_management" ,container.Add );
            AddIf( null != this._screenSharing ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode)new JumpCloud.SDK.V2.Runtime.Json.JsonNumber((int)this._screenSharing) : null, "screen_sharing" ,container.Add );
            AddIf( null != (((object)this._systemId)?.ToString()) ? (JumpCloud.SDK.V2.Runtime.Json.JsonNode) new JumpCloud.SDK.V2.Runtime.Json.JsonString(this._systemId.ToString()) : null, "system_id" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}