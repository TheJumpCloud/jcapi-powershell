// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6282, generator: {generator})
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace JumpCloud.SDK.DirectoryInsights.Models
{
    using static JumpCloud.SDK.DirectoryInsights.Runtime.Extensions;

    /// <summary>EventQuery is the users' command to search our auth logs</summary>
    public partial class EventQuery
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject into a new instance of <see cref="EventQuery" />.
        /// </summary>
        /// <param name="json">A JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal EventQuery(JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_searchTerm = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject>("search_term"), out var __jsonSearchTerm) ? JumpCloud.SDK.DirectoryInsights.Models.SearchTerm.FromJson(__jsonSearchTerm) : SearchTerm;}
            {_endTime = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString>("end_time"), out var __jsonEndTime) ? global::System.DateTime.TryParse((string)__jsonEndTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonEndTimeValue) ? __jsonEndTimeValue : EndTime : EndTime;}
            {_fields = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonArray>("fields"), out var __jsonFields) ? If( __jsonFields as JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : Fields;}
            {_limit = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNumber>("limit"), out var __jsonLimit) ? (long?)__jsonLimit : Limit;}
            {_searchAfter = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonArray>("search_after"), out var __jsonSearchAfter) ? If( __jsonSearchAfter as JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : SearchAfter;}
            {_service = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonArray>("service"), out var __jsonService) ? If( __jsonService as JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(string) (__k is JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString __j ? (string)(__j.ToString()) : null)) ))() : null : Service;}
            {_sort = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString>("sort"), out var __jsonSort) ? (string)__jsonSort : (string)Sort;}
            {_startTime = If( json?.PropertyT<JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString>("start_time"), out var __jsonStartTime) ? global::System.DateTime.TryParse((string)__jsonStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonStartTimeValue) ? __jsonStartTimeValue : StartTime : StartTime;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode"/> into an instance of JumpCloud.SDK.DirectoryInsights.Models.IEventQuery.
        /// </summary>
        /// <param name="node">a <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of JumpCloud.SDK.DirectoryInsights.Models.IEventQuery.</returns>
        public static JumpCloud.SDK.DirectoryInsights.Models.IEventQuery FromJson(JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode node)
        {
            return node is JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject json ? new EventQuery(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="EventQuery" /> into a <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="EventQuery" /> as a <see cref="JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode" />.
        /// </returns>
        public JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode ToJson(JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject container, JumpCloud.SDK.DirectoryInsights.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._searchTerm ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) this._searchTerm.ToJson(null,serializationMode) : null, "search_term" ,container.Add );
            AddIf( null != this._endTime ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString(this._endTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "end_time" ,container.Add );
            if (null != this._fields)
            {
                var __w = new JumpCloud.SDK.DirectoryInsights.Runtime.Json.XNodeArray();
                foreach( var __x in this._fields )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("fields",__w);
            }
            AddIf( null != this._limit ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode)new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNumber((long)this._limit) : null, "limit" ,container.Add );
            if (null != this._searchAfter)
            {
                var __r = new JumpCloud.SDK.DirectoryInsights.Runtime.Json.XNodeArray();
                foreach( var __s in this._searchAfter )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("search_after",__r);
            }
            if (null != this._service)
            {
                var __m = new JumpCloud.SDK.DirectoryInsights.Runtime.Json.XNodeArray();
                foreach( var __n in this._service )
                {
                    AddIf(null != (((object)__n)?.ToString()) ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                }
                container.Add("service",__m);
            }
            AddIf( null != (((object)this._sort)?.ToString()) ? (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString(this._sort.ToString()) : null, "sort" ,container.Add );
            AddIf( (JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonNode) new JumpCloud.SDK.DirectoryInsights.Runtime.Json.JsonString(this._startTime.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)), "start_time" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}