{
  "basePath": "/api/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "application": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "beta": {
          "type": "boolean"
        },
        "color": {
          "enum": [
            "#202D38",
            "#005466",
            "#3E8696",
            "#006CAC",
            "#0617AC",
            "#7C6ADA",
            "#D5779D",
            "#9E2F00",
            "#FFB000",
            "#58C469",
            "#57C49F",
            "#FF6C03"
          ],
          "type": "string"
        },
        "config": {
          "properties": {
            "acsUrl": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "constantAttributes": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "mutable": {
                  "type": "boolean"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "value": {
                        "type": "string"
                      },
                      "visible": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "databaseAttributes": {
              "properties": {
                "position": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "idpCertificate": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpPrivateKey": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "spEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "created": {
          "type": "string"
        },
        "databaseAttributes": {
          "items": {
            "additionalProperties": true,
            "type": "object"
          },
          "type": "array"
        },
        "description": {
          "maxLength": 256,
          "type": "string"
        },
        "displayLabel": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "learnMore": {
          "type": "string"
        },
        "logo": {
          "properties": {
            "color": {
              "enum": [
                "#202D38",
                "#005466",
                "#3E8696",
                "#006CAC",
                "#0617AC",
                "#7C6ADA",
                "#D5779D",
                "#9E2F00",
                "#FFB000",
                "#58C469",
                "#57C49F",
                "#FF6C03"
              ],
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "sso": {
          "properties": {
            "beta": {
              "type": "boolean"
            },
            "jit": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ssoUrl": {
          "type": "string"
        }
      },
      "title": "Application",
      "type": "object"
    },
    "applicationslist": {
      "properties": {
        "name": {
          "type": "string"
        },
        "results": {
          "description": "The list of applications.",
          "items": {
            "$ref": "#/definitions/application"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of applications.",
          "type": "integer"
        }
      },
      "title": "ApplicationsList",
      "type": "object"
    },
    "applicationtemplate": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "beta": {
          "type": "boolean"
        },
        "color": {
          "enum": [
            "#202D38",
            "#005466",
            "#3E8696",
            "#006CAC",
            "#0617AC",
            "#7C6ADA",
            "#D5779D",
            "#9E2F00",
            "#FFB000",
            "#58C469",
            "#57C49F",
            "#FF6C03"
          ],
          "type": "string"
        },
        "config": {
          "properties": {
            "acsUrl": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "constantAttributes": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "mutable": {
                  "type": "boolean"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "value": {
                        "type": "string"
                      },
                      "visible": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "databaseAttributes": {
              "properties": {
                "position": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "idpCertificate": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpPrivateKey": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "spEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "displayLabel": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "isConfigured": {
          "type": "boolean"
        },
        "jit": {
          "properties": {
            "attributes": {
              "additionalProperties": true,
              "type": "object"
            },
            "createOnly": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "keywords": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "learnMore": {
          "type": "string"
        },
        "logo": {
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provision": {
          "properties": {
            "beta": {
              "type": "boolean"
            },
            "groups_supported": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sso": {
          "properties": {
            "beta": {
              "type": "boolean"
            },
            "jit": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ssoUrl": {
          "type": "string"
        },
        "status": {
          "enum": [
            "end_of_life",
            "end_of_support",
            "beta"
          ],
          "type": "string"
        },
        "test": {
          "type": "string"
        }
      },
      "title": "ApplicationTemplate",
      "type": "object"
    },
    "applicationtemplateslist": {
      "properties": {
        "results": {
          "description": "The list of applications.",
          "items": {
            "$ref": "#/definitions/applicationtemplate"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of applications.",
          "type": "integer"
        }
      },
      "title": "ApplicationTemplatesList",
      "type": "object"
    },
    "command": {
      "properties": {
        "command": {
          "description": "The command to execute on the server.",
          "type": "string"
        },
        "commandRunners": {
          "description": "An array of IDs of the Command Runner Users that can execute this command.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "commandType": {
          "description": "The Command OS",
          "type": "string"
        },
        "files": {
          "description": "An array of file IDs to include with the command.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "launchType": {
          "description": "How the command will execute.",
          "type": "string"
        },
        "listensTo": {
          "description": "",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "description": "The ID of the organization.",
          "type": "string"
        },
        "schedule": {
          "description": "A crontab that consists of: [ (seconds) (minutes) (hours) (days of month) (months) (weekdays) ] or [ immediate ]. If you send this as an empty string, it will run immediately.\n",
          "type": "string"
        },
        "scheduleRepeatType": {
          "description": "When the command will repeat.",
          "type": "string"
        },
        "shell": {
          "description": "The shell used to run the command.",
          "type": "string"
        },
        "sudo": {
          "description": "",
          "type": "boolean"
        },
        "systems": {
          "description": "An array of system IDs to run the command on. Not available if you are using Groups.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "timeout": {
          "description": "The time in seconds to allow the command to run for.",
          "type": "string"
        },
        "trigger": {
          "description": "The name of the command trigger.",
          "type": "string"
        },
        "user": {
          "description": "The ID of the system user to run the command as. This field is required when creating a command with a commandType of \"mac\" or \"linux\".",
          "type": "string"
        }
      },
      "required": [
        "command"
      ],
      "title": "Command",
      "type": "object"
    },
    "commandfilereturn": {
      "properties": {
        "results": {
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the file.",
                "type": "string"
              },
              "destination": {
                "description": "The location where the file will be stored.",
                "type": "string"
              },
              "name": {
                "description": "The file name.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of commands files",
          "type": "integer"
        }
      },
      "title": "CommandFileReturn",
      "type": "object"
    },
    "commandresult": {
      "properties": {
        "_id": {
          "description": "The ID of the command.",
          "type": "string"
        },
        "command": {
          "description": "The command that was executed on the system.",
          "type": "string"
        },
        "files": {
          "description": "An array of file ids that were included in the command",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the command.",
          "type": "string"
        },
        "organization": {
          "description": "The ID of the organization.",
          "type": "string"
        },
        "requestTime": {
          "description": "The time that the command was sent.",
          "type": "string"
        },
        "response": {
          "properties": {
            "data": {
              "properties": {
                "exitCode": {
                  "description": "The stderr output from the command that ran.",
                  "type": "integer"
                },
                "output": {
                  "description": "The output of the command that was executed.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "error": {
              "description": "The stderr output from the command that ran.",
              "type": "string"
            },
            "id": {
              "description": "ID of the response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "responseTime": {
          "description": "The time that the command was completed.",
          "type": "string"
        },
        "sudo": {
          "description": "If the user had sudo rights",
          "type": "boolean"
        },
        "system": {
          "description": "The name of the system the command was executed on.",
          "type": "string"
        },
        "systemId": {
          "description": "The id of the system the command was executed on.",
          "type": "string"
        },
        "user": {
          "description": "The user the command ran as.",
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowInstanceId": {
          "type": "string"
        }
      },
      "title": "CommandResult",
      "type": "object"
    },
    "commandresultslist": {
      "properties": {
        "results": {
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the command result.",
                "type": "string"
              },
              "command": {
                "description": "The command that was executed on the system.",
                "type": "string"
              },
              "exitCode": {
                "description": "The stderr output from the command that ran.",
                "type": "integer"
              },
              "name": {
                "description": "The name of the command.",
                "type": "string"
              },
              "requestTime": {
                "description": "The time (UTC) that the command was sent.",
                "type": "string"
              },
              "responseTime": {
                "description": "The time (UTC) that the command was completed.",
                "type": "string"
              },
              "sudo": {
                "description": "If the user had sudo rights.",
                "type": "boolean"
              },
              "system": {
                "description": "The display name of the system the command was executed on.",
                "type": "string"
              },
              "systemId": {
                "description": "The id of the system the command was executed on.",
                "type": "string"
              },
              "user": {
                "description": "The user the command ran as.",
                "type": "string"
              },
              "workflowId": {
                "description": "The id for the command that ran on the system.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of command results.",
          "type": "integer"
        }
      },
      "title": "CommandResultsList",
      "type": "object"
    },
    "commandslist": {
      "properties": {
        "results": {
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the command.",
                "type": "string"
              },
              "command": {
                "description": "The Command to execute.",
                "type": "string"
              },
              "commandType": {
                "description": "The Command OS.",
                "type": "string"
              },
              "launchType": {
                "description": "How the Command is executed.",
                "type": "string"
              },
              "listensTo": {
                "type": "string"
              },
              "name": {
                "description": "The name of the Command.",
                "type": "string"
              },
              "organization": {
                "description": "The ID of the Organization.",
                "type": "string"
              },
              "schedule": {
                "description": "A crontab that consists of: [ (seconds) (minutes) (hours) (days of month) (months) (weekdays) ] or [ immediate ]. If you send this as an empty string, it will run immediately.",
                "type": "string"
              },
              "scheduleRepeatType": {
                "description": "When the command will repeat.",
                "type": "string"
              },
              "trigger": {
                "description": "Trigger to execute command.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of commands",
          "type": "integer"
        }
      },
      "title": "CommandsList",
      "type": "object"
    },
    "errorresponse": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "ErrorResponse",
      "type": "object"
    },
    "fde": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "keyPresent": {
          "type": "boolean"
        }
      },
      "title": "FDE",
      "type": "object"
    },
    "JcSystem": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "agentVersion": {
          "type": "string"
        },
        "allowMultiFactorAuthentication": {
          "type": "boolean"
        },
        "allowPublicKeyAuthentication": {
          "type": "boolean"
        },
        "allowSshPasswordAuthentication": {
          "type": "boolean"
        },
        "allowSshRootLogin": {
          "type": "boolean"
        },
        "amazonInstanceID": {
          "type": "string"
        },
        "arch": {
          "type": "string"
        },
        "builtInCommands": {
          "items": {
            "properties": {
              "name": {
                "enum": [
                  "erase",
                  "lock",
                  "restart",
                  "shutdown"
                ],
                "type": "string"
              },
              "type": {
                "enum": [
                  "security"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array"
        },
        "connectionHistory": {
          "items": {
            "additionalProperties": true,
            "type": "object"
          },
          "type": "array"
        },
        "created": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "fde": {
          "$ref": "#/definitions/fde"
        },
        "fileSystem": {
          "type": "string"
        },
        "hasServiceAccount": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "lastContact": {
          "type": "string"
        },
        "mdm": {
          "properties": {
            "dep": {
              "type": "boolean"
            },
            "profileIdentifier": {
              "type": "string"
            },
            "userApproved": {
              "type": "boolean"
            },
            "vendor": {
              "enum": [
                "unknown",
                "none",
                "internal",
                "external"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "modifySSHDConfig": {
          "type": "boolean"
        },
        "networkInterfaces": {
          "items": {
            "properties": {
              "address": {
                "type": "string"
              },
              "family": {
                "type": "string"
              },
              "internal": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "organization": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "provisionMetadata": {
          "properties": {
            "provisioner": {
              "properties": {
                "provisionerId": {
                  "type": "string"
                },
                "type": {
                  "default": "administrator",
                  "enum": [
                    "administrator",
                    "mdm",
                    "user"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "remoteIP": {
          "type": "string"
        },
        "sshdParams": {
          "items": {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "sshRootEnabled": {
          "type": "boolean"
        },
        "systemInsights": {
          "properties": {
            "state": {
              "enum": [
                "enabled",
                "disabled",
                "deferred"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "systemTimezone": {
          "type": "integer"
        },
        "templateName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "JcSystem",
      "type": "object"
    },
    "mfa": {
      "properties": {
        "configured": {
          "type": "boolean"
        },
        "exclusion": {
          "type": "boolean"
        },
        "exclusionUntil": {
          "format": "date-time",
          "type": "string"
        }
      },
      "title": "mfa",
      "type": "object"
    },
    "organization": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hasStripeCustomerId": {
          "type": "boolean"
        },
        "logoUrl": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/organizationsettings"
        }
      },
      "title": "Organization",
      "type": "object"
    },
    "organizationsettings": {
      "description": "",
      "properties": {
        "agentVersion": {
          "type": "string"
        },
        "betaFeatures": {
          "additionalProperties": true,
          "type": "object"
        },
        "contactEmail": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "deviceIdentificationEnabled": {
          "type": "boolean"
        },
        "disableCommandRunner": {
          "type": "boolean"
        },
        "disableGoogleLogin": {
          "type": "boolean"
        },
        "disableLdap": {
          "type": "boolean"
        },
        "disableUM": {
          "type": "boolean"
        },
        "displayPreferences": {
          "properties": {
            "orgInsights": {
              "properties": {
                "deviceNotifications": {
                  "properties": {
                    "agentOutOfDateMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "inactiveMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "uptimeMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "visible": {
                      "type": "boolean"
                    },
                    "withoutPoliciesMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "withoutUsersMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "diskEncryption": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "expiredPasswords": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "fundamentals": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "upcomingPasswordExpiration": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "userLockouts": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "duplicateLDAPGroups": {
          "type": "boolean"
        },
        "emailDisclaimer": {
          "type": "string"
        },
        "enableGoogleApps": {
          "type": "boolean"
        },
        "enableManagedUID": {
          "type": "boolean"
        },
        "enableO365": {
          "type": "boolean"
        },
        "enableUserPortalAgentInstall": {
          "type": "boolean"
        },
        "features": {
          "properties": {
            "directoryInsights": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "directoryInsightsPremium": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "systemInsights": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "enableNewDarwin": {
                  "type": "boolean"
                },
                "enableNewLinux": {
                  "type": "boolean"
                },
                "enableNewWindows": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "passwordCompliance": {
          "enum": [
            "custom",
            "pci3",
            "windows"
          ],
          "type": "string"
        },
        "passwordPolicy": {
          "properties": {
            "allowUsernameSubstring": {
              "type": "boolean"
            },
            "daysAfterExpirationToSelfRecover": {
              "description": "Deprecated field used for the legacy grace period feature.",
              "type": "integer"
            },
            "daysBeforeExpirationToForceReset": {
              "minimum": 1,
              "type": "integer"
            },
            "effectiveDate": {
              "type": "string"
            },
            "enableDaysAfterExpirationToSelfRecover": {
              "type": "boolean"
            },
            "enableDaysBeforeExpirationToForceReset": {
              "type": "boolean"
            },
            "enableLockoutTimeInSeconds": {
              "type": "boolean"
            },
            "enableMaxHistory": {
              "type": "boolean"
            },
            "enableMaxLoginAttempts": {
              "type": "boolean"
            },
            "enableMinChangePeriodInDays": {
              "type": "boolean"
            },
            "enableMinLength": {
              "type": "boolean"
            },
            "enablePasswordExpirationInDays": {
              "type": "boolean"
            },
            "lockoutTimeInSeconds": {
              "type": "integer"
            },
            "maxHistory": {
              "maximum": 24,
              "minimum": 1,
              "type": "integer"
            },
            "maxLoginAttempts": {
              "minimum": 1,
              "type": "integer"
            },
            "minChangePeriodInDays": {
              "type": "integer"
            },
            "minLength": {
              "type": "integer"
            },
            "needsLowercase": {
              "type": "boolean"
            },
            "needsNumeric": {
              "type": "boolean"
            },
            "needsSymbolic": {
              "type": "boolean"
            },
            "needsUppercase": {
              "type": "boolean"
            },
            "passwordExpirationInDays": {
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "pendingDelete": {
          "type": "boolean"
        },
        "showIntro": {
          "type": "boolean"
        },
        "systemUserPasswordExpirationInDays": {
          "type": "integer"
        },
        "systemUsersCanEdit": {
          "type": "boolean"
        },
        "userPortal": {
          "properties": {
            "idleSessionDurationMinutes": {
              "maximum": 129600,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "title": "OrganizationSettings",
      "type": "object"
    },
    "organizationsettingsput": {
      "properties": {
        "contactEmail": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "deviceIdentificationEnabled": {
          "type": "boolean"
        },
        "disableGoogleLogin": {
          "type": "boolean"
        },
        "disableLdap": {
          "type": "boolean"
        },
        "disableUM": {
          "type": "boolean"
        },
        "duplicateLDAPGroups": {
          "type": "boolean"
        },
        "emailDisclaimer": {
          "type": "string"
        },
        "enableManagedUID": {
          "type": "boolean"
        },
        "features": {
          "properties": {
            "directoryInsights": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "directoryInsightsPremium": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "systemInsights": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "enableNewDarwin": {
                  "type": "boolean"
                },
                "enableNewLinux": {
                  "type": "boolean"
                },
                "enableNewWindows": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "passwordCompliance": {
          "enum": [
            "custom",
            "pci3",
            "windows"
          ],
          "type": "string"
        },
        "passwordPolicy": {
          "properties": {
            "allowUsernameSubstring": {
              "type": "boolean"
            },
            "daysAfterExpirationToSelfRecover": {
              "description": "Deprecated field used for the legacy grace period feature.",
              "type": "integer"
            },
            "daysBeforeExpirationToForceReset": {
              "minimum": 1,
              "type": "integer"
            },
            "enableDaysAfterExpirationToSelfRecover": {
              "type": "boolean"
            },
            "enableDaysBeforeExpirationToForceReset": {
              "type": "boolean"
            },
            "enableLockoutTimeInSeconds": {
              "type": "boolean"
            },
            "enableMaxHistory": {
              "type": "boolean"
            },
            "enableMaxLoginAttempts": {
              "type": "boolean"
            },
            "enableMinChangePeriodInDays": {
              "type": "boolean"
            },
            "enableMinLength": {
              "type": "boolean"
            },
            "enablePasswordExpirationInDays": {
              "type": "boolean"
            },
            "lockoutTimeInSeconds": {
              "type": "integer"
            },
            "maxHistory": {
              "maximum": 24,
              "minimum": 1,
              "type": "integer"
            },
            "maxLoginAttempts": {
              "minimum": 1,
              "type": "integer"
            },
            "minChangePeriodInDays": {
              "type": "integer"
            },
            "minLength": {
              "type": "integer"
            },
            "needsLowercase": {
              "type": "boolean"
            },
            "needsNumeric": {
              "type": "boolean"
            },
            "needsSymbolic": {
              "type": "boolean"
            },
            "needsUppercase": {
              "type": "boolean"
            },
            "passwordExpirationInDays": {
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "showIntro": {
          "type": "boolean"
        },
        "systemUserPasswordExpirationInDays": {
          "type": "integer"
        },
        "systemUsersCanEdit": {
          "type": "boolean"
        },
        "userPortal": {
          "properties": {
            "idleSessionDurationMinutes": {
              "maximum": 129600,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "title": "OrganizationSettingsPut",
      "type": "object"
    },
    "organizationslist": {
      "properties": {
        "results": {
          "description": "The list of organizations.",
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the organization.",
                "type": "string"
              },
              "displayName": {
                "description": "The name of the organization.",
                "type": "string"
              },
              "logoUrl": {
                "description": "The organization logo image URL. ",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of organizations. ",
          "type": "integer"
        }
      },
      "title": "OrganizationList",
      "type": "object"
    },
    "radiusserver": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "mfa": {
          "enum": [
            "DISABLED",
            "ENABLED",
            "REQUIRED",
            "ALWAYS"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkSourceIp": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "sharedSecret": {
          "type": "string"
        },
        "userLockoutAction": {
          "type": "string"
        },
        "userPasswordExpirationAction": {
          "type": "string"
        }
      },
      "title": "RadiusServer",
      "type": "object"
    },
    "radiusserverpost": {
      "properties": {
        "mfa": {
          "enum": [
            "DISABLED",
            "ENABLED",
            "REQUIRED",
            "ALWAYS"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkSourceIp": {
          "type": "string"
        },
        "sharedSecret": {
          "description": "RADIUS shared secret between the server and client.",
          "type": "string"
        },
        "userLockoutAction": {
          "type": "string"
        },
        "userPasswordExpirationAction": {
          "type": "string"
        }
      },
      "required": [
        "networkSourceIp",
        "name",
        "sharedSecret"
      ],
      "title": "RadiusServerPost",
      "type": "object"
    },
    "radiusserverput": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "mfa": {
          "enum": [
            "DISABLED",
            "ENABLED",
            "REQUIRED",
            "ALWAYS"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkSourceIp": {
          "type": "string"
        },
        "userLockoutAction": {
          "type": "string"
        },
        "userPasswordExpirationAction": {
          "type": "string"
        }
      },
      "title": "RadiusServerPut",
      "type": "object"
    },
    "radiusserverslist": {
      "properties": {
        "results": {
          "items": {
            "$ref": "#/definitions/radiusserver"
          },
          "type": "array"
        },
        "totalCount": {
          "type": "integer"
        }
      },
      "title": "RadiusServersList",
      "type": "object"
    },
    "search": {
      "properties": {
        "fields": {
          "type": "string"
        },
        "filter": {
          "additionalProperties": true,
          "type": "object"
        },
        "searchFilter": {
          "additionalProperties": true,
          "type": "object"
        }
      },
      "title": "search",
      "type": "object"
    },
    "sshkeylist": {
      "properties": {
        "_id": {
          "description": "The ID of the SSH key.",
          "type": "string"
        },
        "create_date": {
          "description": "The date the SSH key was created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SSH key.",
          "type": "string"
        },
        "public_key": {
          "description": "The Public SSH key.",
          "type": "string"
        }
      },
      "title": "SSHKeyList",
      "type": "object"
    },
    "sshkeypost": {
      "properties": {
        "name": {
          "description": "The name of the SSH key.",
          "type": "string"
        },
        "public_key": {
          "description": "The Public SSH key.",
          "type": "string"
        }
      },
      "required": [
        "public_key",
        "name"
      ],
      "title": "SSHKeyPost",
      "type": "object"
    },
    "systemput": {
      "properties": {
        "agentBoundMessages": {
          "items": {
            "properties": {
              "cmd": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allowMultiFactorAuthentication": {
          "type": "boolean"
        },
        "allowPublicKeyAuthentication": {
          "type": "boolean"
        },
        "allowSshPasswordAuthentication": {
          "type": "boolean"
        },
        "allowSshRootLogin": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        }
      },
      "title": "SystemPut",
      "type": "object"
    },
    "systemslist": {
      "properties": {
        "results": {
          "description": "The list of systems.",
          "items": {
            "$ref": "#/definitions/JcSystem"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of systems.",
          "type": "integer"
        }
      },
      "title": "SystemsList",
      "type": "object"
    },
    "systemuserput": {
      "properties": {
        "account_locked": {
          "type": "boolean"
        },
        "addresses": {
          "description": "type, poBox, extendedAddress, streetAddress, locality, region, postalCode, country",
          "items": {
            "properties": {
              "country": {
                "maxLength": 1024,
                "type": "string"
              },
              "extendedAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "locality": {
                "maxLength": 1024,
                "type": "string"
              },
              "poBox": {
                "maxLength": 1024,
                "type": "string"
              },
              "postalCode": {
                "maxLength": 1024,
                "type": "string"
              },
              "region": {
                "maxLength": 1024,
                "type": "string"
              },
              "streetAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allow_public_key": {
          "type": "boolean"
        },
        "attributes": {
          "items": {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "company": {
          "maxLength": 1024,
          "type": "string"
        },
        "costCenter": {
          "maxLength": 1024,
          "type": "string"
        },
        "department": {
          "maxLength": 1024,
          "type": "string"
        },
        "description": {
          "maxLength": 1024,
          "type": "string"
        },
        "disableDeviceMaxLoginAttempts": {
          "type": "boolean"
        },
        "displayname": {
          "maxLength": 1024,
          "type": "string"
        },
        "email": {
          "maxLength": 1024,
          "type": "string"
        },
        "employeeIdentifier": {
          "description": "Must be unique per user. ",
          "maxLength": 256,
          "type": "string"
        },
        "employeeType": {
          "maxLength": 1024,
          "type": "string"
        },
        "enable_managed_uid": {
          "type": "boolean"
        },
        "enable_user_portal_multifactor": {
          "type": "boolean"
        },
        "external_dn": {
          "type": "string"
        },
        "external_password_expiration_date": {
          "type": "string"
        },
        "external_source_type": {
          "type": "string"
        },
        "externally_managed": {
          "type": "boolean"
        },
        "firstname": {
          "maxLength": 1024,
          "type": "string"
        },
        "jobTitle": {
          "maxLength": 1024,
          "type": "string"
        },
        "lastname": {
          "maxLength": 1024,
          "type": "string"
        },
        "ldap_binding_user": {
          "type": "boolean"
        },
        "location": {
          "maxLength": 1024,
          "type": "string"
        },
        "mfa": {
          "$ref": "#/definitions/mfa"
        },
        "middlename": {
          "maxLength": 1024,
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_never_expires": {
          "type": "boolean"
        },
        "phoneNumbers": {
          "items": {
            "properties": {
              "number": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "public_key": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "additionalProperties": true,
            "type": "object"
          },
          "type": "array"
        },
        "samba_service_user": {
          "type": "boolean"
        },
        "ssh_keys": {
          "items": {
            "$ref": "#/definitions/sshkeypost"
          },
          "type": "array"
        },
        "sudo": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "unix_guid": {
          "minimum": 1,
          "type": "integer"
        },
        "unix_uid": {
          "minimum": 1,
          "type": "integer"
        },
        "username": {
          "maxLength": 1024,
          "type": "string"
        }
      },
      "title": "SystemUserPut",
      "type": "object"
    },
    "systemuserputpost": {
      "properties": {
        "account_locked": {
          "type": "boolean"
        },
        "activated": {
          "type": "boolean"
        },
        "addresses": {
          "items": {
            "properties": {
              "country": {
                "type": "string"
              },
              "extendedAddress": {
                "type": "string"
              },
              "locality": {
                "type": "string"
              },
              "poBox": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "streetAddress": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allow_public_key": {
          "type": "boolean"
        },
        "attributes": {
          "items": {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "company": {
          "type": "string"
        },
        "costCenter": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "description": {
          "maxLength": 1024,
          "type": "string"
        },
        "disableDeviceMaxLoginAttempts": {
          "type": "boolean"
        },
        "displayname": {
          "type": "string"
        },
        "email": {
          "maxLength": 1024,
          "type": "string"
        },
        "employeeIdentifier": {
          "description": "Must be unique per user. ",
          "maxLength": 256,
          "type": "string"
        },
        "employeeType": {
          "type": "string"
        },
        "enable_managed_uid": {
          "type": "boolean"
        },
        "enable_user_portal_multifactor": {
          "type": "boolean"
        },
        "external_dn": {
          "type": "string"
        },
        "external_password_expiration_date": {
          "format": "date-time",
          "type": "string"
        },
        "external_source_type": {
          "type": "string"
        },
        "externally_managed": {
          "type": "boolean"
        },
        "firstname": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "ldap_binding_user": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "mfa": {
          "$ref": "#/definitions/mfa"
        },
        "middlename": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_never_expires": {
          "type": "boolean"
        },
        "passwordless_sudo": {
          "type": "boolean"
        },
        "phoneNumbers": {
          "items": {
            "properties": {
              "number": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "public_key": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "additionalProperties": true,
            "type": "object"
          },
          "type": "array"
        },
        "samba_service_user": {
          "type": "boolean"
        },
        "sudo": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "unix_guid": {
          "minimum": 1,
          "type": "integer"
        },
        "unix_uid": {
          "minimum": 1,
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "username"
      ],
      "title": "SystemUserPost",
      "type": "object"
    },
    "systemuserreturn": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "account_locked": {
          "type": "boolean"
        },
        "account_locked_date": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "addresses": {
          "items": {
            "properties": {
              "country": {
                "maxLength": 1024,
                "type": "string"
              },
              "extendedAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "locality": {
                "maxLength": 1024,
                "type": "string"
              },
              "poBox": {
                "maxLength": 1024,
                "type": "string"
              },
              "postalCode": {
                "maxLength": 1024,
                "type": "string"
              },
              "region": {
                "maxLength": 1024,
                "type": "string"
              },
              "streetAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allow_public_key": {
          "type": "boolean"
        },
        "attributes": {
          "items": {
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "badLoginAttempts": {
          "minimum": 0,
          "type": "integer"
        },
        "company": {
          "maxLength": 1024,
          "type": "string"
        },
        "costCenter": {
          "maxLength": 1024,
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "department": {
          "maxLength": 1024,
          "type": "string"
        },
        "description": {
          "maxLength": 1024,
          "type": "string"
        },
        "disableDeviceMaxLoginAttempts": {
          "type": "boolean"
        },
        "displayname": {
          "maxLength": 1024,
          "type": "string"
        },
        "email": {
          "maxLength": 1024,
          "type": "string"
        },
        "employeeIdentifier": {
          "description": "Must be unique per user. ",
          "maxLength": 256,
          "type": "string"
        },
        "employeeType": {
          "maxLength": 1024,
          "type": "string"
        },
        "enable_managed_uid": {
          "type": "boolean"
        },
        "enable_user_portal_multifactor": {
          "type": "boolean"
        },
        "external_dn": {
          "type": "string"
        },
        "external_password_expiration_date": {
          "type": "string"
        },
        "external_source_type": {
          "type": "string"
        },
        "externally_managed": {
          "type": "boolean"
        },
        "firstname": {
          "maxLength": 1024,
          "type": "string"
        },
        "jobTitle": {
          "maxLength": 1024,
          "type": "string"
        },
        "lastname": {
          "maxLength": 1024,
          "type": "string"
        },
        "ldap_binding_user": {
          "type": "boolean"
        },
        "location": {
          "maxLength": 1024,
          "type": "string"
        },
        "mfa": {
          "$ref": "#/definitions/mfa"
        },
        "middlename": {
          "maxLength": 1024,
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "password_expiration_date": {
          "type": "string"
        },
        "password_expired": {
          "type": "boolean"
        },
        "password_never_expires": {
          "type": "boolean"
        },
        "passwordless_sudo": {
          "type": "boolean"
        },
        "phoneNumbers": {
          "items": {
            "properties": {
              "id": {
                "type": "string"
              },
              "number": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "public_key": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "additionalProperties": true,
            "type": "object"
          },
          "type": "array"
        },
        "samba_service_user": {
          "type": "boolean"
        },
        "ssh_keys": {
          "items": {
            "$ref": "#/definitions/sshkeylist"
          },
          "type": "array"
        },
        "sudo": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "totp_enabled": {
          "type": "boolean"
        },
        "unix_guid": {
          "minimum": 1,
          "type": "integer"
        },
        "unix_uid": {
          "minimum": 1,
          "type": "integer"
        },
        "username": {
          "maxLength": 1024,
          "type": "string"
        }
      },
      "title": "SystemUserReturn",
      "type": "object"
    },
    "systemuserslist": {
      "properties": {
        "results": {
          "description": "The list of system users.",
          "items": {
            "$ref": "#/definitions/systemuserreturn"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of system users.",
          "type": "integer"
        }
      },
      "title": "SystemUsersList",
      "type": "object"
    },
    "triggerreturn": {
      "properties": {
        "triggered": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "title": "TriggerReturn",
      "type": "object"
    }
  },
  "host": "console.jumpcloud.com",
  "info": {
    "description": "JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.\n# V2 API\n  ### Directory Objects\n\nOur new API offers the ability to interact with some of our core features; otherwise known as Directory Objects. The Directory Objects are:\n\n* Commands\n* Policies\n* Applications\n* Systems\n* Users\n* User Groups\n* System Groups\n* Radius Servers\n* Directories: Office 365, LDAP,G-Suite, Active Directory\n* Duo accounts and applications.\n\nThe Directory Object is an important concept to understand in order to successfully use JumpCloud APIs.\n\n### JumpCloud Graph\n\nWe've also introduced the concept of the JumpCloud Graph along with  Directory Objects. The Graph is a powerful aspect of our platform which will enable you to associate objects with each other, or establish membership for certain objects to become members of other objects.\n\nSpecific `GET` endpoints will allow you to traverse the JumpCloud Graph to return all indirect and directly bound objects in your organization.\n\n\n### JumpCloud Graph Model Example\n\nThe diagram below highlights our association and membership model as it relates to Directory Objects.\n\n![alt text](https://s3.amazonaws.com/jumpcloud-kb/Knowledge+Base+Photos/API+Docs/jumpcloud_graph.png \"JumpCloud Graph Model Example\")\n\n\n### API Considerations\n\nWe are currently in the process of migrating our [API V1](https://docs.jumpcloud.com/1.0)  features to API V2. Depending on your type of integration you may be required to use both V1 and V2 APIs.\n\nPlease refer to our [API V1](https://docs.jumpcloud.com/1.0) docs to understand the functionality still available in that API set.\n\n### API SDKs\n\nYou can find language specific SDKs that can help you kickstart your Integration with JumpCloud in the following GitHub repositories:\n\n* [Python](https://github.com/TheJumpCloud/jcapi-python)\n* [Go](https://github.com/TheJumpCloud/jcapi-go)\n* [Ruby](https://github.com/TheJumpCloud/jcapi-ruby)\n* [Java](https://github.com/TheJumpCloud/jcapi-java)\n# API Key\n  #### Access Your API Key\n\nTo locate your API Key:\n1. Log into the [JumpCloud Admin Console](https://console.jumpcloud.com/)\n2. Go to the username drop down located in the top-right of the Console.\n3. Retrieve your API key from API Settings.\n\n#### API Key Considerations\n\nThis API key is associated to the currently logged in administrator. Other admins will have different API keys.\n\nPlease keep this API key secret, as it grants full access to any data accessible via your JumpCloud console account.\n\nYou can also reset your API key in the same location in the JumpCloud Admin Console.\n\n##### Recycling or Resetting Your API Key\n\nIn order to revoke access with the current API key, simply reset your API key. This will render all calls using the previous API key inaccessible.\n\nFor API V2 the API key will be passed in as a header with the header name \"x-api-key\".\n\n**Example**\n```\ncurl -H \"x-api-key: [YOUR_API_KEY_HERE]\" \"https://console.jumpcloud.com/api/v2/systemgroups\"\n```\n# System Context\n  * [Introduction](#introduction)\n* [Supported endpoints](#supported-endpoints)\n* [Response codes](#response-codes)\n* [Authentication](#authentication)\n* [Additional examples](#additional-examples)\n* [Third party](#third-party)\n\n### Introduction\n\nJumpCloud System Context Authorization is an alternative way to authenticate with a subset of JumpCloud's REST APIs. Using this method a system can manage its information and resource associations, allowing modern auto provisioning environments to scale as needed.\n\n**Note: The following documentation applies to Linux Operating Systems only.**\n\n### Supported Endpoints\n\nJumpCloud System Context Authorization can be used in conjunction with Systems endpoints found in the V1 API and certain System Group endpoints found in the v2 API.\n\n- A system may fetch, alter, and delete metadata about itself, including manipulating a system's Group and Systemuser associations,\n  - `/api/systems/{system_id}` | [`GET`](https://docs.jumpcloud.com/1.0/systems/list-an-individual-system) [`PUT`](https://docs.jumpcloud.com/1.0/systems/update-a-system)\n- A system may delete itself from your JumpCloud organization\n  - `/api/systems/{system_id}` | [`DELETE`](https://docs.jumpcloud.com/1.0/systems/delete-a-system)\n- A system may fetch its direct resource associations under v2 (Groups)\n  - `/api/v2/systems/{system_id}/memberof` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-a-systems-group-membership)\n  - `/api/v2/systems/{system_id}/associations` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-associations-of-a-system)\n  - `/api/v2/systems/{system_id}/users` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-the-users-associated-with-a-system)\n- A system may alter its direct resource associations under v2 (Groups)\n  - `/api/v2/systems/{system_id}/associations` | [`POST`](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system)\n- A system may alter its Syste",
    "title": "JumpCloud APIs",
    "version": "1.0"
  },
  "parameters": {},
  "paths": {
    "/application-templates": {
      "get": {
        "description": "The endpoint returns all the SSO / SAML Application Templates.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/application-templates \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "List-ApplicationTemplate",
        "parameters": [
          {
            "description": "The comma separated fields included in the returned records. If omitted the default list of fields will be returned.",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "name",
            "description": "The comma separated fields used to sort the collection. Default sort is ascending, prefix with - to sort descending.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/applicationtemplateslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List Application Templates"
      }
    },
    "/application-templates/{id}": {
      "get": {
        "description": "The endpoint returns a specific SSO / SAML Application Template.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/application-templates/{id} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "Get-ApplicationTemplate",
        "parameters": [
          {
            "description": "The comma separated fields included in the returned records. If omitted the default list of fields will be returned.",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "The comma separated fields used to sort the collection. Default sort is ascending, prefix with - to sort descending.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/applicationtemplate"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get an Application Template"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/applications": {
      "get": {
        "description": "The endpoint returns all your SSO / SAML Applications.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/applications \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "List-Application",
        "parameters": [
          {
            "description": "The comma separated fields included in the returned records. If omitted the default list of fields will be returned.",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "name",
            "description": "The comma separated fields used to sort the collection. Default sort is ascending, prefix with - to sort descending.",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/applicationslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Applications"
      },
      "post": {
        "description": "The endpoint adds a new SSO / SAML Applications.",
        "operationId": "Create-Application",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create an Application"
      }
    },
    "/applications/{id}": {
      "delete": {
        "description": "The endpoint deletes an SSO / SAML Application.",
        "operationId": "Delete-Application",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete an Application"
      },
      "get": {
        "description": "The endpoint retrieves an SSO / SAML Application.",
        "operationId": "Get-Application",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get an Application"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "The endpoint updates a SSO / SAML Application.",
        "operationId": "Set-Application",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update an Application"
      }
    },
    "/command/trigger/{triggername}": {
      "parameters": [
        {
          "in": "path",
          "name": "triggername",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to launch a command based on a defined trigger.\n\n#### Sample Requests\n\n**Launch a Command via a Trigger**\n\n```\ncurl --silent \\\n     -X 'POST' \\\n     -H \"x-api-key: {API_KEY}\" \\\n     \"https://console.jumpcloud.com/api/command/trigger/{TriggerName}\"\n```\n**Launch a Command via a Trigger passing a JSON object to the command**\n```\ncurl --silent \\\n     -X 'POST' \\\n     -H \"x-api-key: {API_KEY}\" \\\n     -H 'Accept: application/json' \\\n     -H 'Content-Type: application/json' \\\n     -d '{ \"srcip\":\"192.168.2.32\", \"attack\":\"Cross Site Scripting Attempt\" }' \\\n     \"https://console.jumpcloud.com/api/command/trigger/{TriggerName}\"\n```",
        "operationId": "POST-CommandTrigger",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/triggerreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Launch a command via a Trigger"
      }
    },
    "/commandresults": {
      "get": {
        "description": "This endpoint returns all command results.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:{API_KEY}'\n  ```",
        "operationId": "List-CommandResult",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use space separated sort parameters to sort the collection.\nDefault sort is ascending. Prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandresultslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List all Command Results"
      }
    },
    "/commandresults/{id}": {
      "delete": {
        "description": "This endpoint deletes a specific command result.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ````",
        "operationId": "Delete-CommandResult",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandresult"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a Command result"
      },
      "get": {
        "description": "This endpoint returns a specific command result.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults/{CommandResultID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "Get-CommandResult",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandresult"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List an individual Command result"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/commands": {
      "get": {
        "description": "This endpoint returns all commands.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commands/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "List-Command",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use space separated sort parameters to sort the collection.\nDefault sort is ascending. Prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List All Commands"
      },
      "post": {
        "description": "This endpoint allows you to create a new command.\n\n#### Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/commands/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"name\":\"Test API Command\",\n\t\"command\":\"String\",\n\t\"user\":\"{UserID}\",\n\t\"schedule\":\"\",\n\t\"timeout\":\"100\"\n}'\n\n```",
        "operationId": "Create-Command",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create A Command"
      }
    },
    "/commands/{id}": {
      "delete": {
        "description": "This endpoint deletes a specific command based on the Command ID.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/commands/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "Delete-Command",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a Command"
      },
      "get": {
        "description": "This endpoint returns a specific command based on the command ID.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commands/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "Get-Command",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List an individual Command"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint Updates a command based on the command ID and returns the modified command record.\n\n#### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/commands/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"name\":\"Test API Command\",\n\t\"command\":\"String\",\n\t\"user\":\"{UserID}\",\n\t\"schedule\":\"\",\n\t\"timeout\":\"100\"\n}'\n\n```",
        "operationId": "Set-Command",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update a Command"
      }
    },
    "/files/command/{id}": {
      "get": {
        "description": "This endpoint returns the uploaded file(s) associated with a specific command.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/files/command/{commandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "Get-CommandFile",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/commandfilereturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get a Command File"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/organizations": {
      "get": {
        "description": "This endpoint returns Organization Details.\n\n#### Sample Request\n\n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/organizations \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "List-Organization",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A nested object containing a string `searchTerm` and a list of `fields` to search on.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use space separated sort parameters to sort the collection.\nDefault sort is ascending. Prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/organizationslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get Organization Details"
      }
    },
    "/organizations/{id}": {
      "get": {
        "description": "This endpoint returns a particular Organization.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/organizations/{OrganizationID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "Get-Organization",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/organization"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get an Organization"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update an Organization.\n\nNote: `passwordPolicy` settings are only used when `passwordCompliance` is set to \"custom\". We discourage the use of non-custom passwordCompliance values.\n\n`hasStripeCustomerId` is deprecated and will be removed.\n\n#### Sample Request\n\n```\ncurl -X PUT https://console.jumpcloud.com/api/organizations/{OrganizationID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"settings\": {\n    \"contactName\": \"Admin Name\",\n    \"contactEmail\": \"admin@company.com\",\n    \"systemUsersCanEdit\":true,\n    \"passwordPolicy\": {\n      \"enableMaxHistory\": true,\n      \"maxHistory\": 3\n    }\n  }\n}'\n```",
        "operationId": "Set-Organization",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/organizationsettingsput"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/organization"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update an Organization"
      }
    },
    "/radiusservers": {
      "get": {
        "description": "This endpoint allows you to get a list of all RADIUS servers in your organization.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/radiusservers/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n```",
        "operationId": "List-RadiusServer",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use space separated sort parameters to sort the collection.\nDefault sort is ascending. Prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserverslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List Radius Servers"
      },
      "post": {
        "description": "This endpoint allows you to create RADIUS servers in your organization.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/radiusservers/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"{test_radius}\",\n    \"networkSourceIp\": \"{0.0.0.0}\",\n    \"sharedSecret\":\"{secretpassword}\",\n    \"userLockoutAction\": \"REMOVE\",\n    \"userPasswordExpirationAction\": \"MAINTAIN\"\n}'\n```",
        "operationId": "Create-RadiusServer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/radiusserverpost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserver"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create a Radius Server"
      }
    },
    "/radiusservers/{id}": {
      "delete": {
        "description": "This endpoint allows you to delete RADIUS servers in your organization.\n```\ncurl -X DELETE https://console.jumpcloud.com/api/radiusservers/{ServerID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n```",
        "operationId": "Delete-RadiusServer",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/radiusserverput"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete Radius Server"
      },
      "get": {
        "description": "This endpoint allows you to get a RADIUS server in your organization.\n\n####\n```\ncurl -X PUT https://console.jumpcloud.com/api/radiusservers/{ServerID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n```",
        "operationId": "Get-RadiusServer",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserver"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get Radius Server"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update RADIUS servers in your organization.\n\n####\n```\ncurl -X PUT https://console.jumpcloud.com/api/radiusservers/{ServerID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"{name_update}\",\n    \"networkSourceIp\": \"{0.0.0.0}\",\n    \"sharedSecret\": \"{secret_password}\",\n    \"userLockoutAction\": \"REMOVE\",\n    \"userPasswordExpirationAction\": \"MAINTAIN\"\n}'\n```",
        "operationId": "Set-RadiusServer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "name": "test radius",
                "networkSourceIp": "0.0.0.0",
                "sharedSecret": "secretradiuspassword",
                "tagsNames": [
                  "tag1"
                ]
              },
              "properties": {
                "mfa": {
                  "enum": [
                    "DISABLED",
                    "ENABLED",
                    "REQUIRED",
                    "ALWAYS"
                  ],
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "networkSourceIp": {
                  "type": "string"
                },
                "sharedSecret": {
                  "type": "string"
                },
                "userLockoutAction": {
                  "type": "string"
                },
                "userPasswordExpirationAction": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "networkSourceIp",
                "sharedSecret"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserverput"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update Radius Servers"
      }
    },
    "/search/organizations": {
      "post": {
        "description": "This endpoint will return Organization data based on your search parameters. This endpoint WILL NOT allow you to add a new Organization.\n\nYou can use the supported parameters and pass those in the body of request.\n\nThe parameters must be passed as Content-Type application/json.\n\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/search/organizations \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"search\":{\n    \"fields\" : [\"settings.name\"],\n    \"searchTerm\": \"Second\"\n    },\n  \"fields\": [\"_id\", \"displayName\", \"logoUrl\"],\n  \"limit\" : 0,\n  \"skip\" : 0\n}'\n```",
        "operationId": "Search-Organization",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/organizationslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Search Organizations"
      }
    },
    "/search/systems": {
      "post": {
        "description": "Return Systems in multi-record format allowing for the passing of the `filter` and `searchFilter` parameters. This WILL NOT allow you to add a new system.\n\nTo support advanced filtering you can use the `filter` and `searchFilter` parameters that can only be passed in the body of POST /api/search/* routes. The `filter` and `searchFilter` parameters must be passed as Content-Type application/json.\n\nThe `filter` parameter is an object with a single property, either `and` or `or` with the value of the property being an array of query expressions.\n\nThis allows you to filter records using the logic of matching ALL or ANY records in the array of query expressions. If the `and` or `or` are not included the default behavior is to match ALL query expressions.\n\nThe `searchFilter` parameter allows text searching on supported fields by specifying a `searchTerm` and a list of `fields` to query on. If any `field` has a partial text match on the`searchTerm` the record will be returned.\n\n\n#### Sample Request\n\nExact search for a list of hostnames\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"filter\": {\n    \"or\": [\n      {\"hostname\" : \"my-hostname\"},\n      {\"hostname\" : \"other-hostname\"}\n    ]\n  },\n  \"fields\" : \"os hostname displayName\"\n}'\n```\n\nText search for a hostname or display name\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"my-host\",\n    \"fields\": [\"hostname\", \"displayName\"]\n  },\n  \"fields\": \"os hostname displayName\"\n}'\n```\n\nCombining `filter` and `searchFilter` to search for names that match a given OS\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"my-host\",\n    \"fields\": [\"hostname\", \"displayName\"]\n  },\n  \"filter\": {\n    \"or\": [\n      {\"os\" : \"Ubuntu\"},\n      {\"os\" : \"Mac OS X\"}\n    ]\n  },\n  \"fields\": \"os hostname displayName\"\n}'\n```",
        "operationId": "Search-System",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Search Systems"
      }
    },
    "/search/systemusers": {
      "post": {
        "description": "Return System Users in multi-record format allowing for the passing of the `filter` and `searchFilter` parameters. This WILL NOT allow you to add a new system user.\n\nTo support advanced filtering you can use the `filter` and `searchFilter` parameters that can only be passed in the body of POST /api/search/* routes. The `filter` and `searchFilter` parameters must be passed as Content-Type application/json.\n\nThe `filter` parameter is an object with a single property, either `and` or `or` with the value of the property being an array of query expressions.\n\nThis allows you to filter records using the logic of matching ALL or ANY records in the array of query expressions. If the `and` or `or` are not included the default behavior is to match ALL query expressions.\n\nThe `searchFilter` parameter allows text searching on supported fields by specifying a `searchTerm` and a list of `fields` to query on. If any `field` has a partial text match on the`searchTerm` the record will be returned.\n\n\n#### Sample Request\n\nExact search for a list of system users in a department\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"filter\" : [{\"department\" : \"IT\"}],\n  \"fields\" : \"email username sudo\"\n}'\n```\n\nText search for system users with and email on a domain\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\" : {\n    \"searchTerm\": \"@jumpcloud.com\",\n    \"fields\": [\"email\"]\n  },\n  \"fields\" : \"email username sudo\"\n}'\n```\n\nCombining `filter` and `searchFilter` to text search for system users with and email on a domain who are in a list of departments\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"@jumpcloud.com\",\n    \"fields\": [\"email\"]\n  },\n  \"filter\": {\n    \"or\": [\n      {\"department\" : \"IT\"},\n      {\"department\" : \"Sales\"}\n    ]\n  },\n  \"fields\" : \"email username sudo\"\n}'\n```",
        "operationId": "Search-User",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Search System Users"
      }
    },
    "/systems": {
      "get": {
        "description": "This endpoint returns all Systems.\n\n#### Sample Requests\n```\ncurl -X GET https://console.jumpcloud.com/api/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "List-System",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "default": 10,
            "description": "The number of records to return at once. Limited to 100.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A nested object containing a string `searchTerm` and a list of `fields` to search on.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "minimum": 0,
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "",
            "description": "Use space separated sort parameters to sort the collection.\nDefault sort is ascending. Prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/systemslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List All Systems"
      }
    },
    "/systems/{id}": {
      "delete": {
        "description": "This endpoint allows you to delete a system. This command will cause the system to uninstall the JumpCloud agent from its self which can can take about a minute. If the system is not connected to JumpCloud the system record will simply be removed.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "Delete-System",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JcSystem"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a System"
      },
      "get": {
        "description": "This endpoint returns an individual system.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "Get-System",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JcSystem"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List an individual system"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update a system.\n\n#### Sample Request \n```\ncurl -X PUT https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"displayName\":\"Name_Update\",\n\t\"allowSshPasswordAuthentication\":\"true\",\n\t\"allowSshRootLogin\":\"true\",\n\t\"allowMultiFactorAuthentication\":\"true\",\n\t\"allowPublicKeyAuthentication\":\"false\"\n}'\n```",
        "operationId": "Set-System",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/systemput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JcSystem"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update a system"
      }
    },
    "/systems/{system_id}/command/builtin/erase": {
      "parameters": [
        {
          "in": "path",
          "name": "system_id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the erase command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/erase \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "Clear-System",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Erase a System"
      }
    },
    "/systems/{system_id}/command/builtin/lock": {
      "parameters": [
        {
          "in": "path",
          "name": "system_id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the lock command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/lock \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "Lock-System",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Lock a System"
      }
    },
    "/systems/{system_id}/command/builtin/restart": {
      "parameters": [
        {
          "in": "path",
          "name": "system_id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the restart command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/restart \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "Restart-System",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Restart a System"
      }
    },
    "/systems/{system_id}/command/builtin/shutdown": {
      "parameters": [
        {
          "in": "path",
          "name": "system_id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the shutdown command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/shutdown \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "Stop-System",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Shutdown a System"
      }
    },
    "/systemusers": {
      "get": {
        "description": "This endpoint returns all systemusers.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "List-User",
        "parameters": [
          {
            "default": 10,
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "default": "",
            "description": "The comma separated fields used to sort the collection.\nDefault sort is ascending, prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "default": "",
            "description": "The comma separated fields included in the returned records.\nIf omitted the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "A nested object containing a string `searchTerm` and a list of `fields` to search on.",
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List all system users"
      },
      "post": {
        "description": "This endpoint allows you to create a new system user.\n\n#### Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"username\":\"{username}\",\n\t\"email\":\"{email_address}\",\n\t\"firstname\":\"{Name}\",\n\t\"lastname\":\"{Name}\"\n}'\n```",
        "operationId": "Create-User",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/systemuserputpost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User added successfully",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create a system user"
      }
    },
    "/systemusers/{id}": {
      "delete": {
        "description": "This endpoint allows you to delete a particular system user.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/systemusers/{UserID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "Delete-User",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a system user"
      },
      "get": {
        "description": "This endpoint returns a particular System User.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/systemusers/{UserID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "Get-User",
        "parameters": [
          {
            "default": "",
            "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          },
          {
            "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List a system user"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update a system user.\n\n#### Sample Request\n\n```\ncurl -X PUT https://console.jumpcloud.com/api/systemusers/{UserID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"email\":\"{email_address}\",\n\t\"firstname\":\"{Name}\",\n\t\"lastname\":\"{Name}\"\n}'\n```",
        "operationId": "Set-User",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/systemuserput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update a system user"
      }
    },
    "/systemusers/{id}/expire": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to expire a user's password.",
        "operationId": "POST-ExpireUserPassword",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Expire a system user's password"
      }
    },
    "/systemusers/{id}/resetmfa": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to reset the TOTP key for a specified system user and put them in an TOTP MFA enrollment period. This will result in the user being prompted to setup TOTP MFA when logging into userportal. Please be aware that if the user does not complete TOTP MFA setup before the `exclusionUntil` date, they will be locked out of any resources that require TOTP MFA.\n\nPlease refer to our [Knowledge Base Article](https://support.jumpcloud.com/customer/en/portal/articles/2959138-using-multifactor-authentication-with-jumpcloud) on setting up MFA for more information.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systemusers/{UserID}/resetmfa \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\"exclusion\": true, \"exclusionUntil\": \"{date-time}\"}'\n\n```",
        "operationId": "Reset-UserMfa",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "exclusion": {
                  "type": "boolean"
                },
                "exclusionUntil": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Reset a system user's MFA token"
      }
    },
    "/systemusers/{id}/sshkeys": {
      "get": {
        "description": "This endpoint will return a specific System User's public SSH key.",
        "operationId": "List-UserSshKey",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/sshkeylist"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List a system user's public SSH keys"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint will create a specific System User's Public SSH Key.",
        "operationId": "Create-UserSshKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/sshkeypost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/sshkeylist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create a system user's Public SSH Key"
      }
    },
    "/systemusers/{id}/unlock": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to unlock a user's account.",
        "operationId": "Unlock-User",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Unlock a system user"
      }
    },
    "/systemusers/{systemuser_id}/sshkeys/{id}": {
      "delete": {
        "description": "This endpoint will delete a specific System User's SSH Key.",
        "operationId": "Delete-UserSshKey",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a system user's Public SSH Keys"
      },
      "parameters": [
        {
          "in": "path",
          "name": "systemuser_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "trait:standardErrors:400": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/errorresponse"
      }
    },
    "trait:standardErrors:401": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/errorresponse"
      }
    },
    "trait:standardErrors:403": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/errorresponse"
      }
    },
    "trait:standardErrors:404": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/errorresponse"
      }
    },
    "trait:standardErrors:409": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/errorresponse"
      }
    },
    "trait:standardErrors:500": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/errorresponse"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "x-api-key": {
      "in": "header",
      "name": "x-api-key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}
