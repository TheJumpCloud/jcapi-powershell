{
  "basePath": "/api/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "application": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "beta": {
          "type": "boolean"
        },
        "color": {
          "enum": [
            "#202D38",
            "#005466",
            "#3E8696",
            "#006CAC",
            "#0617AC",
            "#7C6ADA",
            "#D5779D",
            "#9E2F00",
            "#FFB000",
            "#58C469",
            "#57C49F",
            "#FF6C03"
          ],
          "type": "string"
        },
        "config": {
          "properties": {
            "acsUrl": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "constantAttributes": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "mutable": {
                  "type": "boolean"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "value": {
                        "type": "string"
                      },
                      "visible": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "databaseAttributes": {
              "properties": {
                "position": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "idpCertificate": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpPrivateKey": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "spEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "created": {
          "type": "string"
        },
        "databaseAttributes": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "description": {
          "maxLength": 256,
          "type": "string"
        },
        "displayLabel": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "learnMore": {
          "type": "string"
        },
        "logo": {
          "properties": {
            "color": {
              "enum": [
                "#202D38",
                "#005466",
                "#3E8696",
                "#006CAC",
                "#0617AC",
                "#7C6ADA",
                "#D5779D",
                "#9E2F00",
                "#FFB000",
                "#58C469",
                "#57C49F",
                "#FF6C03"
              ],
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "sso": {
          "properties": {
            "type": {
              "type": "string"
            },
            "beta": {
              "type": "boolean"
            },
            "jit": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ssoUrl": {
          "type": "string"
        }
      },
      "required": [
        "config",
        "name",
        "ssoUrl"
      ],
      "title": "Application",
      "type": "object"
    },
    "applicationslist": {
      "properties": {
        "name": {
          "type": "string"
        },
        "results": {
          "description": "The list of applications.",
          "items": {
            "$ref": "#/definitions/application"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of applications.",
          "type": "integer"
        }
      },
      "title": "ApplicationsList",
      "type": "object"
    },
    "applicationtemplate": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "beta": {
          "type": "boolean"
        },
        "status": {
          "enum": [
            "end_of_life",
            "end_of_support",
            "beta"
          ],
          "type": "string"
        },
        "color": {
          "enum": [
            "#202D38",
            "#005466",
            "#3E8696",
            "#006CAC",
            "#0617AC",
            "#7C6ADA",
            "#D5779D",
            "#9E2F00",
            "#FFB000",
            "#58C469",
            "#57C49F",
            "#FF6C03"
          ],
          "type": "string"
        },
        "config": {
          "properties": {
            "acsUrl": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "constantAttributes": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "mutable": {
                  "type": "boolean"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "readOnly": {
                        "type": "boolean"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "value": {
                        "type": "string"
                      },
                      "visible": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "databaseAttributes": {
              "properties": {
                "position": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "idpCertificate": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "idpPrivateKey": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "spEntityId": {
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "string"
                },
                "position": {
                  "type": "integer"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "required": {
                  "type": "boolean"
                },
                "toggle": {
                  "type": "string"
                },
                "tooltip": {
                  "properties": {
                    "template": {
                      "type": "string"
                    },
                    "variables": {
                      "properties": {
                        "icon": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "displayLabel": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "isConfigured": {
          "type": "boolean"
        },
        "jit": {
          "properties": {
            "attributes": {
              "type": "object",
              "additionalProperties": true
            },
            "createOnly": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "learnMore": {
          "type": "string"
        },
        "logo": {
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provision": {
          "properties": {
            "type": {
              "type": "string"
            },
            "beta": {
              "type": "boolean"
            },
            "groups_supported": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "sso": {
          "properties": {
            "type": {
              "type": "string"
            },
            "beta": {
              "type": "boolean"
            },
            "jit": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ssoUrl": {
          "type": "string"
        },
        "test": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ApplicationTemplate",
      "type": "object"
    },
    "applicationtemplateslist": {
      "properties": {
        "results": {
          "description": "The list of applications.",
          "items": {
            "$ref": "#/definitions/applicationtemplate"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of applications.",
          "type": "integer"
        }
      },
      "title": "ApplicationTemplatesList",
      "type": "object"
    },
    "command": {
      "title": "Command",
      "type": "object",
      "properties": {
        "command": {
          "description": "The command to execute on the server.",
          "type": "string"
        },
        "commandRunners": {
          "description": "An array of IDs of the Command Runner Users that can execute this command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "commandType": {
          "default": "linux",
          "description": "The Command OS",
          "type": "string"
        },
        "files": {
          "description": "An array of file IDs to include with the command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "launchType": {
          "description": "How the command will execute.",
          "type": "string"
        },
        "listensTo": {
          "description": "",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "description": "The ID of the organization.",
          "type": "string"
        },
        "schedule": {
          "description": "A crontab that consists of: [ (seconds) (minutes) (hours) (days of month) (months) (weekdays) ] or [ immediate ]. If you send this as an empty string, it will run immediately.\n",
          "type": "string"
        },
        "scheduleRepeatType": {
          "description": "When the command will repeat.",
          "type": "string"
        },
        "sudo": {
          "description": "",
          "type": "boolean"
        },
        "systems": {
          "description": "An array of system IDs to run the command on. Not available if you are using Groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeout": {
          "description": "The time in seconds to allow the command to run for.",
          "type": "string"
        },
        "trigger": {
          "description": "The name of the command trigger.",
          "type": "string"
        },
        "user": {
          "description": "The ID of the system user to run the command as. This field is required when creating a command with a commandType of \"mac\" or \"linux\".",
          "type": "string"
        },
        "shell": {
          "type": "string",
          "description": "The shell used to run the command."
        }
      },
      "required": [
        "command",
        "commandType",
        "name"
      ]
    },
    "commandfilereturn": {
      "properties": {
        "results": {
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the file.",
                "type": "string"
              },
              "destination": {
                "description": "The location where the file will be stored.",
                "type": "string"
              },
              "name": {
                "description": "The file name.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of commands files",
          "type": "integer"
        }
      },
      "title": "CommandFileReturn",
      "type": "object"
    },
    "commandresult": {
      "properties": {
        "_id": {
          "description": "The ID of the command.",
          "type": "string"
        },
        "command": {
          "description": "The command that was executed on the system.",
          "type": "string"
        },
        "files": {
          "description": "An array of file ids that were included in the command",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the command.",
          "type": "string"
        },
        "organization": {
          "description": "The ID of the organization.",
          "type": "string"
        },
        "requestTime": {
          "description": "The time that the command was sent.",
          "type": "string"
        },
        "response": {
          "properties": {
            "data": {
              "properties": {
                "exitCode": {
                  "description": "The stderr output from the command that ran.",
                  "type": "integer"
                },
                "output": {
                  "description": "The output of the command that was executed.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "error": {
              "description": "The stderr output from the command that ran.",
              "type": "string"
            },
            "id": {
              "description": "ID of the response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "responseTime": {
          "description": "The time that the command was completed.",
          "type": "string"
        },
        "sudo": {
          "description": "If the user had sudo rights",
          "type": "boolean"
        },
        "system": {
          "description": "The name of the system the command was executed on.",
          "type": "string"
        },
        "systemId": {
          "description": "The id of the system the command was executed on.",
          "type": "string"
        },
        "user": {
          "description": "The user the command ran as.",
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowInstanceId": {
          "type": "string"
        }
      },
      "title": "CommandResult",
      "type": "object"
    },
    "commandresultslist": {
      "title": "CommandResultsList",
      "type": "object",
      "properties": {
        "totalCount": {
          "description": "The total number of command results.",
          "type": "integer"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "The command that was executed on the system."
              },
              "exitCode": {
                "type": "integer",
                "description": "The stderr output from the command that ran."
              },
              "name": {
                "type": "string",
                "description": "The name of the command."
              },
              "requestTime": {
                "type": "string",
                "description": "The time (UTC) that the command was sent."
              },
              "responseTime": {
                "type": "string",
                "description": "The time (UTC) that the command was completed."
              },
              "sudo": {
                "type": "boolean",
                "description": "If the user had sudo rights."
              },
              "system": {
                "type": "string",
                "description": "The display name of the system the command was executed on."
              },
              "systemId": {
                "type": "string",
                "description": "The id of the system the command was executed on."
              },
              "user": {
                "type": "string",
                "description": "The user the command ran as."
              },
              "workflowId": {
                "type": "string",
                "description": "The id for the command that ran on the system."
              },
              "_id": {
                "type": "string",
                "description": "The ID of the command result."
              }
            }
          }
        }
      }
    },
    "commandslist": {
      "properties": {
        "results": {
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the command.",
                "type": "string"
              },
              "command": {
                "description": "The Command to execute.",
                "type": "string"
              },
              "commandType": {
                "description": "The Command OS.",
                "type": "string"
              },
              "launchType": {
                "description": "How the Command is executed.",
                "type": "string"
              },
              "listensTo": {
                "type": "string"
              },
              "name": {
                "description": "The name of the Command.",
                "type": "string"
              },
              "organization": {
                "description": "The ID of the Organization.",
                "type": "string"
              },
              "schedule": {
                "description": "A crontab that consists of: [ (seconds) (minutes) (hours) (days of month) (months) (weekdays) ] or [ immediate ]. If you send this as an empty string, it will run immediately.",
                "type": "string"
              },
              "scheduleRepeatType": {
                "description": "When the command will repeat.",
                "type": "string"
              },
              "trigger": {
                "description": "Trigger to execute command.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of commands",
          "type": "integer"
        }
      },
      "title": "CommandsList",
      "type": "object"
    },
    "Error": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "HTTP status code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      },
      "title": "Error",
      "type": "object"
    },
    "fde": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "keyPresent": {
          "type": "boolean"
        }
      },
      "title": "FDE",
      "type": "object"
    },
    "mfa": {
      "properties": {
        "configured": {
          "type": "boolean"
        },
        "exclusion": {
          "type": "boolean"
        },
        "exclusionUntil": {
          "format": "date-time",
          "type": "string"
        }
      },
      "title": "mfa",
      "type": "object"
    },
    "organization": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hasStripeCustomerId": {
          "type": "boolean"
        },
        "logoUrl": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/organizationsettings"
        }
      },
      "title": "Organization",
      "type": "object"
    },
    "organizationsettings": {
      "properties": {
        "agentVersion": {
          "type": "string"
        },
        "betaFeatures": {
          "type": "object",
          "additionalProperties": true
        },
        "contactEmail": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "disableCommandRunner": {
          "type": "boolean"
        },
        "disableLdap": {
          "type": "boolean"
        },
        "disableUM": {
          "type": "boolean"
        },
        "displayPreferences": {
          "properties": {
            "orgInsights": {
              "properties": {
                "deviceNotifications": {
                  "properties": {
                    "inactiveMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "withoutUsersMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "withoutPoliciesMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "agentOutOfDateMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "uptimeMetric": {
                      "properties": {
                        "visible": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "visible": {
                      "type": "boolean"
                    }
                  }
                },
                "diskEncryption": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "expiredPasswords": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "fundamentals": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "upcomingPasswordExpiration": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "userLockouts": {
                  "properties": {
                    "visible": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "duplicateLDAPGroups": {
          "type": "boolean"
        },
        "emailDisclaimer": {
          "type": "string"
        },
        "enableGoogleApps": {
          "type": "boolean"
        },
        "enableManagedUID": {
          "type": "boolean"
        },
        "enableO365": {
          "type": "boolean"
        },
        "enableUserPortalAgentInstall": {
          "type": "boolean"
        },
        "features": {
          "properties": {
            "directoryInsightsPremium": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "systemInsights": {
              "properties": {
                "enableNewDarwin": {
                  "type": "boolean"
                },
                "enableNewLinux": {
                  "type": "boolean"
                },
                "enableNewWindows": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "directoryInsights": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "growthData": {
          "description": "Object containing Optimizely experimentIds and states corresponding to them",
          "type": "object",
          "additionalProperties": true
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "passwordCompliance": {
          "enum": [
            "custom",
            "pci3",
            "windows"
          ],
          "type": "string"
        },
        "passwordPolicy": {
          "properties": {
            "allowUsernameSubstring": {
              "type": "boolean"
            },
            "daysAfterExpirationToSelfRecover": {
              "type": "integer",
              "description": "Deprecated field used for the legacy grace period feature."
            },
            "daysBeforeExpirationToForceReset": {
              "minimum": 1,
              "type": "integer"
            },
            "effectiveDate": {
              "type": "string"
            },
            "enableDaysAfterExpirationToSelfRecover": {
              "type": "boolean"
            },
            "enableDaysBeforeExpirationToForceReset": {
              "type": "boolean"
            },
            "enableLockoutTimeInSeconds": {
              "type": "boolean"
            },
            "enableMaxHistory": {
              "type": "boolean"
            },
            "enableMaxLoginAttempts": {
              "type": "boolean"
            },
            "enableMinChangePeriodInDays": {
              "type": "boolean"
            },
            "enableMinLength": {
              "type": "boolean"
            },
            "enablePasswordExpirationInDays": {
              "type": "boolean"
            },
            "lockoutTimeInSeconds": {
              "type": "integer"
            },
            "maxHistory": {
              "maximum": 24,
              "minimum": 1,
              "type": "integer"
            },
            "maxLoginAttempts": {
              "minimum": 1,
              "type": "integer"
            },
            "minChangePeriodInDays": {
              "type": "integer"
            },
            "minLength": {
              "type": "integer"
            },
            "needsLowercase": {
              "type": "boolean"
            },
            "needsNumeric": {
              "type": "boolean"
            },
            "needsSymbolic": {
              "type": "boolean"
            },
            "needsUppercase": {
              "type": "boolean"
            },
            "passwordExpirationInDays": {
              "minimum": 1,
              "type": "integer"
            },
            "enableResetLockoutCounter": {
              "type": "boolean"
            },
            "resetLockoutCounterMinutes": {
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "pendingDelete": {
          "type": "boolean"
        },
        "showIntro": {
          "type": "boolean"
        },
        "systemUserPasswordExpirationInDays": {
          "type": "integer"
        },
        "systemUsersCanEdit": {
          "type": "boolean"
        },
        "disableGoogleLogin": {
          "type": "boolean"
        },
        "userPortal": {
          "properties": {
            "idleSessionDurationMinutes": {
              "maximum": 129600,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "deviceIdentificationEnabled": {
          "type": "boolean"
        }
      },
      "title": "OrganizationSettings",
      "type": "object",
      "x-examples": {},
      "description": ""
    },
    "organizationsettingsput": {
      "properties": {
        "contactEmail": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "disableLdap": {
          "type": "boolean"
        },
        "disableUM": {
          "type": "boolean"
        },
        "duplicateLDAPGroups": {
          "type": "boolean"
        },
        "emailDisclaimer": {
          "type": "string"
        },
        "enableManagedUID": {
          "type": "boolean"
        },
        "features": {
          "properties": {
            "directoryInsightsPremium": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "systemInsights": {
              "properties": {
                "enableNewDarwin": {
                  "type": "boolean"
                },
                "enableNewLinux": {
                  "type": "boolean"
                },
                "enableNewWindows": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                },
                "createdAt": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "directoryInsights": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "growthData": {
          "description": "Object containing Optimizely experimentIds and states corresponding to them",
          "type": "object",
          "additionalProperties": true
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "passwordCompliance": {
          "enum": [
            "custom",
            "pci3",
            "windows"
          ],
          "type": "string"
        },
        "passwordPolicy": {
          "properties": {
            "allowUsernameSubstring": {
              "type": "boolean"
            },
            "daysAfterExpirationToSelfRecover": {
              "type": "integer",
              "description": "Deprecated field used for the legacy grace period feature."
            },
            "daysBeforeExpirationToForceReset": {
              "minimum": 1,
              "type": "integer"
            },
            "enableDaysAfterExpirationToSelfRecover": {
              "type": "boolean"
            },
            "enableDaysBeforeExpirationToForceReset": {
              "type": "boolean"
            },
            "enableLockoutTimeInSeconds": {
              "type": "boolean"
            },
            "enableMaxHistory": {
              "type": "boolean"
            },
            "enableMaxLoginAttempts": {
              "type": "boolean"
            },
            "enableMinChangePeriodInDays": {
              "type": "boolean"
            },
            "enableMinLength": {
              "type": "boolean"
            },
            "enablePasswordExpirationInDays": {
              "type": "boolean"
            },
            "lockoutTimeInSeconds": {
              "type": "integer"
            },
            "maxHistory": {
              "maximum": 24,
              "minimum": 1,
              "type": "integer"
            },
            "maxLoginAttempts": {
              "minimum": 1,
              "type": "integer"
            },
            "minChangePeriodInDays": {
              "type": "integer"
            },
            "minLength": {
              "type": "integer"
            },
            "needsLowercase": {
              "type": "boolean"
            },
            "needsNumeric": {
              "type": "boolean"
            },
            "needsSymbolic": {
              "type": "boolean"
            },
            "needsUppercase": {
              "type": "boolean"
            },
            "passwordExpirationInDays": {
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "showIntro": {
          "type": "boolean"
        },
        "systemUserPasswordExpirationInDays": {
          "type": "integer"
        },
        "systemUsersCanEdit": {
          "type": "boolean"
        },
        "disableGoogleLogin": {
          "type": "boolean"
        },
        "userPortal": {
          "properties": {
            "idleSessionDurationMinutes": {
              "maximum": 129600,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object"
        },
        "deviceIdentificationEnabled": {
          "type": "boolean"
        }
      },
      "title": "OrganizationSettingsPut",
      "type": "object"
    },
    "organizationslist": {
      "properties": {
        "results": {
          "description": "The list of organizations.",
          "items": {
            "properties": {
              "_id": {
                "description": "The ID of the organization.",
                "type": "string"
              },
              "displayName": {
                "description": "The name of the organization.",
                "type": "string"
              },
              "logoUrl": {
                "description": "The organization logo image URL. ",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of organizations. ",
          "type": "integer"
        }
      },
      "title": "OrganizationList",
      "type": "object"
    },
    "radiusserver": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "mfa": {
          "enum": [
            "DISABLED",
            "ENABLED",
            "REQUIRED",
            "ALWAYS"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkSourceIp": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "sharedSecret": {
          "type": "string"
        },
        "userLockoutAction": {
          "type": "string"
        },
        "userPasswordExpirationAction": {
          "type": "string"
        }
      },
      "title": "RadiusServer",
      "type": "object"
    },
    "radiusserverpost": {
      "properties": {
        "mfa": {
          "enum": [
            "DISABLED",
            "ENABLED",
            "REQUIRED",
            "ALWAYS"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkSourceIp": {
          "type": "string"
        },
        "sharedSecret": {
          "description": "RADIUS shared secret between the server and client.",
          "type": "string"
        },
        "userLockoutAction": {
          "type": "string"
        },
        "userPasswordExpirationAction": {
          "type": "string"
        }
      },
      "required": [
        "networkSourceIp",
        "name",
        "sharedSecret"
      ],
      "title": "RadiusServerPost",
      "type": "object"
    },
    "radiusserverput": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "mfa": {
          "enum": [
            "DISABLED",
            "ENABLED",
            "REQUIRED",
            "ALWAYS"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkSourceIp": {
          "type": "string"
        },
        "userLockoutAction": {
          "type": "string"
        },
        "userPasswordExpirationAction": {
          "type": "string"
        }
      },
      "title": "RadiusServerPut",
      "type": "object"
    },
    "radiusserverslist": {
      "properties": {
        "results": {
          "items": {
            "$ref": "#/definitions/radiusserver"
          },
          "type": "array"
        },
        "totalCount": {
          "type": "integer"
        }
      },
      "title": "RadiusServersList",
      "type": "object"
    },
    "search": {
      "properties": {
        "fields": {
          "type": "string"
        },
        "filter": {
          "type": "object",
          "additionalProperties": true
        },
        "searchFilter": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "title": "Search",
      "type": "object"
    },
    "sshkeylist": {
      "properties": {
        "_id": {
          "description": "The ID of the SSH key.",
          "type": "string"
        },
        "create_date": {
          "description": "The date the SSH key was created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SSH key.",
          "type": "string"
        },
        "public_key": {
          "description": "The Public SSH key.",
          "type": "string"
        }
      },
      "title": "SSHKeyList",
      "type": "object"
    },
    "sshkeypost": {
      "properties": {
        "name": {
          "description": "The name of the SSH key.",
          "type": "string"
        },
        "public_key": {
          "description": "The Public SSH key.",
          "type": "string"
        }
      },
      "required": [
        "public_key",
        "name"
      ],
      "title": "SSHKeyPost",
      "type": "object"
    },
    "JcSystem": {
      "title": "JcSystem",
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "agentVersion": {
          "type": "string"
        },
        "allowMultiFactorAuthentication": {
          "type": "boolean"
        },
        "allowPublicKeyAuthentication": {
          "type": "boolean"
        },
        "allowSshPasswordAuthentication": {
          "type": "boolean"
        },
        "allowSshRootLogin": {
          "type": "boolean"
        },
        "amazonInstanceID": {
          "type": "string"
        },
        "arch": {
          "type": "string"
        },
        "connectionHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "created": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "fde": {
          "$ref": "#/definitions/fde"
        },
        "fileSystem": {
          "type": "string"
        },
        "hasServiceAccount": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "lastContact": {
          "type": "string"
        },
        "modifySSHDConfig": {
          "type": "boolean"
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "family": {
                "type": "string"
              },
              "internal": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "organization": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "provisionMetadata": {
          "type": "object",
          "properties": {
            "provisioner": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "administrator",
                    "mdm",
                    "user"
                  ],
                  "default": "administrator"
                },
                "provisionerId": {
                  "type": "string"
                }
              }
            }
          }
        },
        "remoteIP": {
          "type": "string"
        },
        "sshRootEnabled": {
          "type": "boolean"
        },
        "sshdParams": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "systemInsights": {
          "type": "object",
          "properties": {
            "state": {
              "enum": [
                "enabled",
                "disabled",
                "deferred"
              ],
              "type": "string"
            }
          }
        },
        "systemTimezone": {
          "type": "integer"
        },
        "templateName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "mdm": {
          "type": "object",
          "properties": {
            "vendor": {
              "type": "string",
              "enum": [
                "unknown",
                "none",
                "internal",
                "external"
              ]
            },
            "profileIdentifier": {
              "type": "string"
            },
            "dep": {
              "type": "boolean"
            },
            "userApproved": {
              "type": "boolean"
            }
          }
        },
        "builtInCommands": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "security"
                ]
              },
              "name": {
                "type": "string",
                "enum": [
                  "erase",
                  "lock",
                  "restart",
                  "shutdown"
                ]
              }
            }
          },
          "readOnly": true
        },
        "osFamily": {
          "type": "string"
        }
      }
    },
    "systemput": {
      "properties": {
        "agentBoundMessages": {
          "items": {
            "properties": {
              "cmd": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allowMultiFactorAuthentication": {
          "type": "boolean"
        },
        "allowPublicKeyAuthentication": {
          "type": "boolean"
        },
        "allowSshPasswordAuthentication": {
          "type": "boolean"
        },
        "allowSshRootLogin": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        }
      },
      "title": "SystemPut",
      "type": "object"
    },
    "systemslist": {
      "properties": {
        "results": {
          "description": "The list of systems.",
          "items": {
            "$ref": "#/definitions/JcSystem"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of systems.",
          "type": "integer"
        }
      },
      "title": "SystemsList",
      "type": "object"
    },
    "systemuserput": {
      "properties": {
        "account_locked": {
          "type": "boolean"
        },
        "addresses": {
          "description": "type, poBox, extendedAddress, streetAddress, locality, region, postalCode, country",
          "items": {
            "properties": {
              "country": {
                "maxLength": 1024,
                "type": "string"
              },
              "extendedAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "locality": {
                "maxLength": 1024,
                "type": "string"
              },
              "poBox": {
                "maxLength": 1024,
                "type": "string"
              },
              "postalCode": {
                "maxLength": 1024,
                "type": "string"
              },
              "region": {
                "maxLength": 1024,
                "type": "string"
              },
              "streetAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allow_public_key": {
          "type": "boolean"
        },
        "attributes": {
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "maxLength": 1024,
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "company": {
          "maxLength": 1024,
          "type": "string"
        },
        "costCenter": {
          "maxLength": 1024,
          "type": "string"
        },
        "department": {
          "maxLength": 1024,
          "type": "string"
        },
        "description": {
          "maxLength": 1024,
          "type": "string"
        },
        "disableDeviceMaxLoginAttempts": {
          "type": "boolean"
        },
        "displayname": {
          "maxLength": 1024,
          "type": "string"
        },
        "email": {
          "maxLength": 1024,
          "type": "string"
        },
        "employeeIdentifier": {
          "description": "Must be unique per user. ",
          "maxLength": 256,
          "type": "string"
        },
        "employeeType": {
          "maxLength": 1024,
          "type": "string"
        },
        "enable_managed_uid": {
          "type": "boolean"
        },
        "enable_user_portal_multifactor": {
          "type": "boolean"
        },
        "external_dn": {
          "type": "string"
        },
        "external_password_expiration_date": {
          "type": "string"
        },
        "external_source_type": {
          "type": "string"
        },
        "externally_managed": {
          "type": "boolean"
        },
        "firstname": {
          "maxLength": 1024,
          "type": "string"
        },
        "jobTitle": {
          "maxLength": 1024,
          "type": "string"
        },
        "lastname": {
          "maxLength": 1024,
          "type": "string"
        },
        "ldap_binding_user": {
          "type": "boolean"
        },
        "location": {
          "maxLength": 1024,
          "type": "string"
        },
        "mfa": {
          "$ref": "#/definitions/mfa"
        },
        "middlename": {
          "maxLength": 1024,
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_never_expires": {
          "type": "boolean"
        },
        "phoneNumbers": {
          "items": {
            "properties": {
              "number": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "public_key": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "type": "object",
            "additionalProperties": true
          },
          "type": "array"
        },
        "samba_service_user": {
          "type": "boolean"
        },
        "ssh_keys": {
          "items": {
            "$ref": "#/definitions/sshkeypost"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ACTIVATED",
            "SUSPENDED"
          ],
          "type": "string"
        },
        "sudo": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "unix_guid": {
          "minimum": 1,
          "type": "integer"
        },
        "unix_uid": {
          "minimum": 1,
          "type": "integer"
        },
        "username": {
          "maxLength": 1024,
          "type": "string"
        }
      },
      "title": "SystemUserPut",
      "type": "object"
    },
    "systemuserputpost": {
      "properties": {
        "account_locked": {
          "type": "boolean"
        },
        "activated": {
          "type": "boolean"
        },
        "addresses": {
          "items": {
            "properties": {
              "country": {
                "type": "string"
              },
              "extendedAddress": {
                "type": "string"
              },
              "locality": {
                "type": "string"
              },
              "poBox": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "streetAddress": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allow_public_key": {
          "type": "boolean"
        },
        "attributes": {
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "maxLength": 1024,
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "company": {
          "type": "string"
        },
        "costCenter": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "description": {
          "maxLength": 1024,
          "type": "string"
        },
        "disableDeviceMaxLoginAttempts": {
          "type": "boolean"
        },
        "displayname": {
          "type": "string"
        },
        "email": {
          "maxLength": 1024,
          "type": "string"
        },
        "employeeIdentifier": {
          "description": "Must be unique per user. ",
          "maxLength": 256,
          "type": "string"
        },
        "employeeType": {
          "type": "string"
        },
        "enable_managed_uid": {
          "type": "boolean"
        },
        "enable_user_portal_multifactor": {
          "type": "boolean"
        },
        "external_dn": {
          "type": "string"
        },
        "external_password_expiration_date": {
          "format": "date-time",
          "type": "string"
        },
        "external_source_type": {
          "type": "string"
        },
        "externally_managed": {
          "type": "boolean"
        },
        "firstname": {
          "type": "string"
        },
        "jobTitle": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "ldap_binding_user": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "mfa": {
          "$ref": "#/definitions/mfa"
        },
        "middlename": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_never_expires": {
          "type": "boolean"
        },
        "passwordless_sudo": {
          "type": "boolean"
        },
        "phoneNumbers": {
          "items": {
            "properties": {
              "number": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "public_key": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "type": "object",
            "additionalProperties": true
          },
          "type": "array"
        },
        "samba_service_user": {
          "type": "boolean"
        },
        "sudo": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "unix_guid": {
          "minimum": 1,
          "type": "integer"
        },
        "unix_uid": {
          "minimum": 1,
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "username"
      ],
      "title": "SystemUserPost",
      "type": "object"
    },
    "systemuserreturn": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "account_locked": {
          "type": "boolean"
        },
        "account_locked_date": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "addresses": {
          "items": {
            "properties": {
              "country": {
                "maxLength": 1024,
                "type": "string"
              },
              "extendedAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "locality": {
                "maxLength": 1024,
                "type": "string"
              },
              "poBox": {
                "maxLength": 1024,
                "type": "string"
              },
              "postalCode": {
                "maxLength": 1024,
                "type": "string"
              },
              "region": {
                "maxLength": 1024,
                "type": "string"
              },
              "streetAddress": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "allow_public_key": {
          "type": "boolean"
        },
        "attributes": {
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "maxLength": 1024,
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "badLoginAttempts": {
          "minimum": 0,
          "type": "integer"
        },
        "company": {
          "maxLength": 1024,
          "type": "string"
        },
        "costCenter": {
          "maxLength": 1024,
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "department": {
          "maxLength": 1024,
          "type": "string"
        },
        "description": {
          "maxLength": 1024,
          "type": "string"
        },
        "disableDeviceMaxLoginAttempts": {
          "type": "boolean"
        },
        "displayname": {
          "maxLength": 1024,
          "type": "string"
        },
        "email": {
          "maxLength": 1024,
          "type": "string"
        },
        "employeeIdentifier": {
          "description": "Must be unique per user. ",
          "maxLength": 256,
          "type": "string"
        },
        "employeeType": {
          "maxLength": 1024,
          "type": "string"
        },
        "enable_managed_uid": {
          "type": "boolean"
        },
        "enable_user_portal_multifactor": {
          "type": "boolean"
        },
        "external_dn": {
          "type": "string"
        },
        "external_password_expiration_date": {
          "type": "string"
        },
        "external_source_type": {
          "type": "string"
        },
        "externally_managed": {
          "type": "boolean"
        },
        "firstname": {
          "maxLength": 1024,
          "type": "string"
        },
        "jobTitle": {
          "maxLength": 1024,
          "type": "string"
        },
        "lastname": {
          "maxLength": 1024,
          "type": "string"
        },
        "ldap_binding_user": {
          "type": "boolean"
        },
        "location": {
          "maxLength": 1024,
          "type": "string"
        },
        "mfa": {
          "$ref": "#/definitions/mfa"
        },
        "middlename": {
          "maxLength": 1024,
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "password_expiration_date": {
          "type": "string"
        },
        "password_expired": {
          "type": "boolean"
        },
        "password_never_expires": {
          "type": "boolean"
        },
        "passwordless_sudo": {
          "type": "boolean"
        },
        "phoneNumbers": {
          "items": {
            "properties": {
              "id": {
                "type": "string"
              },
              "number": {
                "maxLength": 1024,
                "type": "string"
              },
              "type": {
                "maxLength": 1024,
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "public_key": {
          "type": "string"
        },
        "relationships": {
          "items": {
            "type": "object",
            "additionalProperties": true
          },
          "type": "array"
        },
        "samba_service_user": {
          "type": "boolean"
        },
        "ssh_keys": {
          "items": {
            "$ref": "#/definitions/sshkeylist"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ACTIVATED",
            "SUSPENDED"
          ],
          "type": "string"
        },
        "sudo": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "totp_enabled": {
          "type": "boolean"
        },
        "unix_guid": {
          "minimum": 1,
          "type": "integer"
        },
        "unix_uid": {
          "minimum": 1,
          "type": "integer"
        },
        "username": {
          "maxLength": 1024,
          "type": "string"
        }
      },
      "title": "SystemUserReturn",
      "type": "object"
    },
    "systemuserslist": {
      "properties": {
        "results": {
          "description": "The list of system users.",
          "items": {
            "$ref": "#/definitions/systemuserreturn"
          },
          "type": "array"
        },
        "totalCount": {
          "description": "The total number of system users.",
          "type": "integer"
        }
      },
      "title": "SystemUsersList",
      "type": "object"
    },
    "triggerreturn": {
      "properties": {
        "triggered": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "title": "TriggerReturn",
      "type": "object"
    }
  },
  "host": "console.jumpcloud.com",
  "info": {
    "contact": {
      "email": "support@jumpcloud.com",
      "name": "JumpCloud Support",
      "url": "https://support.jumpcloud.com/support/s/"
    },
    "description": "JumpCloud's V1 API. This set of endpoints allows JumpCloud customers to manage commands, systems, & system users.\n# V1 API\n  Our existing API offers the ability to interact with some of our core features such as: Commands, Systems, and Users. We are currently in the process of migrating our API V1 features to [API V2](https://docs.jumpcloud.com/2.0) Depending on your type of integration you may be required to use both V1 and V2 APIs.\n\nPlease refer to our [API V2](https://docs.jumpcloud.com/2.0) docs to understand the functionality available in that API set.\n\n### API SDKs\n\nYou can find language specific SDKs that can help you kickstart your Integration with JumpCloud in the following GitHub repositories:\n\n* [Python](https://github.com/TheJumpCloud/jcapi-python)\n* [Go](https://github.com/TheJumpCloud/jcapi-go)\n* [Ruby](https://github.com/TheJumpCloud/jcapi-ruby)\n* [Java](https://github.com/TheJumpCloud/jcapi-java)\n\n### API Notice\nSome endpoints erroneously return a **200 (OK)** with an empty object when the resource does not exist. As of  **April 15th, 2021** the endpoints will return a **404 (Not Found)** when the resource does not exist.\n\n- DELETE /applications/{id}\n- DELETE /commandresults/{id}\n- DELETE /commands/{id}\n- DELETE /systems/{id}\n- DELETE /systemusers/{id}\n- GET /applications/{id}\n- GET /commandresults/{id}\n- GET /commands/{id}\n- GET /files/command/{id}\n- GET /systems/{id}\n- GET /systemusers/{id}\n- PUT /applications/{id}\n- PUT /commands/{id}\n- PUT /systems/{id}\n- PUT /systemusers/{id}\n\n# API Key\n  #### Access Your API Key\n\nTo locate your API Key:\n1. Log into the [JumpCloud Admin Console](https://console.jumpcloud.com/)\n2. Go to the username drop down located in the top-right of the Console.\n3. Retrieve your API key from API Settings.\n\n#### API Key Considerations\n\nThis API key is associated to the currently logged in administrator. Other admins will have different API keys.\n\nPlease keep this API key secret, as it grants full access to any data accessible via your JumpCloud console account.\n\nYou can also reset your API key in the same location in the JumpCloud Admin Console.\n\n##### Recycling or Resetting Your API Key\n\nIn order to revoke access with the current API key, simply reset your API key. This will render all calls using the previous API key inaccessible.\n\nFor API V1 the API key will be passed in as a header with the header name \"x-api-key\".\n\n**Example**\n```\ncurl -H \"x-api-key: [YOUR_API_KEY_HERE]\" \"https://console.jumpcloud.com/api/systemusers\"\n```\n# System Context\n  * [Introduction](#introduction)\n* [Supported endpoints](#supported-endpoints)\n* [Response codes](#response-codes)\n* [Authentication](#authentication)\n* [Additional examples](#additional-examples)\n* [Third party](#third-party)\n\n### Introduction\n\nJumpCloud System Context Authorization is an alternative way to authenticate with a subset of JumpCloud's REST APIs. Using this method a system can manage its information and resource associations, allowing modern auto provisioning environments to scale as needed.\n\n**Note: The following documentation applies to Linux Operating Systems only.**\n\n### Supported Endpoints\n\nJumpCloud System Context Authorization can be used in conjunction with Systems endpoints found in the V1 API and certain System Group endpoints found in the v2 API.\n\n- A system may fetch, alter, and delete metadata about itself, including manipulating a system's Group and Systemuser associations,\n  - `/api/systems/{system_id}` | [`GET`](https://docs.jumpcloud.com/1.0/systems/list-an-individual-system) [`PUT`](https://docs.jumpcloud.com/1.0/systems/update-a-system)\n- A system may delete itself from your JumpCloud organization\n  - `/api/systems/{system_id}` | [`DELETE`](https://docs.jumpcloud.com/1.0/systems/delete-a-system)\n- A system may fetch its direct resource associations under v2 (Groups)\n  - `/api/v2/systems/{system_id}/memberof` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-a-systems-group-membership)\n  - `/api/v2/systems/{system_id}/associations` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-associations-of-a-system)\n  - `/api/v2/systems/{system_id}/users` | [`GET`](https://docs.jumpcloud.com/2.0/systems/list-the-users-associated-with-a-system)\n- A system may alter its direct resource associations under v2 (Groups)\n  - `/api/v2/systems/{system_id}/associations` | [`POST`](https://docs.jumpcloud.com/2.0/systems/manage-associations-of-a-system)\n- A system may alter its System Group associations\n  - `/api/v2/systemgroups/{systemgroup_id}/members` | [`POST`](https://docs.jumpcloud.com/2.0/system-groups/update-a-system-group)\n    - _NOTE_ If a system attempts to alter the system group membership of a different system the request will be rejected\n\n\n### Response Codes\n\nIf endpoints other than those described above are called using the System Context API the server will return a `401` response.\n\n### Authentication\n\nTo allow for secure access to our APIs, you must authenticate each API request.\nJumpCloud System Context Authorization uses [HTTP Signatures](https://tools.ietf.org/html/draft-cavage-http-signatures-00) to authenticate API requests.\nThe HTTP Signatures sent with each request are similar to the signatures used by the Amazon Web Services REST API.\nTo help with the request-signing process, we have provided an [example bash script](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh). This example API request simply requests the entire system record. You must be root, or have permissions to access the contents of the `/opt/jc` directory to generate a signature.\n\n\nHere is a breakdown of the example script, with explanations.\n\nThe first thing the script does is extract the systemKey from the JSON formatted `/opt/jc/jcagent.conf` file.\n\n```\n#!/bin/bash\n\nconf=\"`cat /opt/jc/jcagent.conf`\"\nregex=\"systemKey\\\":\\\"(\\w+)\\\"\"\n\nif [[ $conf =~ $regex ]] ; then\n  systemKey=\"${BASH_REMATCH[1]}\"\nfi\n```\n\nThen the script retrieves the current date in the correct format.\n\n```\nnow=`date -u \"+%a, %d %h %Y %H:%M:%S GMT\"`;\n```\n\nNext we build a signing string to demonstrate the expected signature format. The signed string must consist of the [request-line](https://tools.ietf.org/html/rfc2616#page-35) and the date header, separated by a newline character.\n\n```\nsignstr=\"GET /api/systems/${systemKey} HTTP/1.1\\ndate: ${now}\"\n```\n\nThe next step is to calculate and apply the signature. This is a two-step process:\n\n1. Create a signature from the signing string using the JumpCloud Agent private key: ``printf \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key``\n1. Then Base64-encode the signature string and trim off the newline characters: ``| openssl enc -e -a | tr -d '\\n'``\n\nThe combined steps above result in:\n\n```\nsignature=`printf \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc -e -a | tr -d '\\n'` ;\n```\n\nFinally, we make sure the API call sending the signature has the same Authorization and Date header values, HTTP method, and URL that were used in the signing string.\n\n```\ncurl -iq \\\n  -H \"Accept: application/json\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Date: ${now}\" \\\n  -H \"Authorization: Signature keyId=\\\"system/${systemKey}\\\",headers=\\\"request-line date\\\",algorithm=\\\"rsa-sha256\\\",signature=\\\"${signature}\\\"\" \\\n  --url https://console.jumpcloud.com/api/systems/${systemKey}\n```\n\n#### Input Data\n\nAll PUT and POST methods should use the HTTP Content-Type header with a value of 'application/json'. PUT methods are used for updating a record. POST methods are used to create a record.\n\nThe following example demonstrates how to update the `displayName` of the system.\n\n```\nsignstr=\"PUT /api/systems/${systemKey} HTTP/1.1\\ndate: ${now}\"\nsignature=`printf \"$signstr\" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc -e -a | tr -d '\\n'` ;\n\ncurl -iq \\\n  -d \"{\\\"displayName\\\" : \\\"updated-system-name-1\\\"}\" \\\n  -X \"PUT\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\" \\\n  -H \"Date: ${now}\" \\\n  -H \"Authorization: Signature keyId=\\\"system/${systemKey}\\\",headers=\\\"request-line date\\\",algorithm=\\\"rsa-sha256\\\",signature=\\\"${signature}\\\"\" \\\n  --url https://console.jumpcloud.com/api/systems/${systemKey}\n```\n\n\n#### Output Data\n\nAll results will be formatted as JSON.\n\nHere is an abbreviated example of response output:\n\n```\n{\n  \"__v\": 0,\n  \"_id\": \"525ee96f52e144993e000015\",\n  \"agentServer\": \"lappy386\",\n  \"agentVersion\": \"0.9.42\",\n  \"arch\": \"x86_64\",\n  \"connectionKey\": \"127.0.0.1_51812\",\n  \"displayName\": \"ubuntu-1204\",\n  \"firstContact\": \"2013-10-16T19:30:55.611Z\",\n  \"hostname\": \"ubuntu-1204\"\n  ...\n```\n\n\n### Additional Examples\n\n#### Signing Authentication Example\n\nThis example demonstrates how to make an authenticated request to fetch the JumpCloud record for this system.\n\n[SigningExample.sh](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh)\n\n\n#### Shutdown Hook\n\nThis example demonstrates how to make authenticated request on system shutdown.\nUsing an init.d script registered at run level 0, you can call the System Context API as the system is shutting down.\n\n[Instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) is an example of an init.d script that only runs at system shutdown.\n\nAfter customizing the [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) script, you should install it on the system(s) running the JumpCloud agent...\n\n1. Copy the modified [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) to `/etc/init.d/instance-shutdown`\n2. On Ubuntu systems, run `update-rc.d instance-shutdown defaults`. On RedHat/CentOS systems, run `chkconfig --add instance-shutdown`\n\n\n### Third Party\n\n#### Chef Cookbooks\n\n[https://github.com/nshenry03/jumpcloud](https://github.com/nshenry03/jumpcloud)\n\n[https://github.com/cjs226/jumpcloud](https://github.com/cjs226/jumpcloud)\n# Multi Tenant Organization API Headers\n  Multi-Tenant Organization API Headers are available for JumpCloud Admins to use when making API requests from Organizations that have multiple managed organizations.\n\nThe `x-org-id` is a required header for all multi-tenant admins when making API requests to Jumpcloud as this header will define what organization you would like to make the request for.\n\nPlease note that Single Tenant Admins do not need to provide this header when making an API request.\n\n#### Header Value\n\n`x-org-id`\n\n#### API Response Codes\n\n- `400` Malformed ID.\n- `400` x-org-id and Organization path ID do not match.\n- `401` ID not included for multi-tenant admin\n- `403` ID included on unsupported route.\n- `404` Organization ID Not Found.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/v2/directories \\\n  -H 'accept: application/json' \\\n  -H 'content-type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -H 'x-org-id: {ORG_ID}'\n\n```\n\n#### To Obtain an Individual Organization ID via the UI\n\nAs a prerequisite your Primary Organization will need to be setup for Multi-Tenancy which will give you access to the Multi-Tenant Organization Admin Portal.\n\n1. Log into JumpCloud [Admin Console](https://console.jumpcloud.com). If you are a multi-tenant Admin, you will automatically be routed to the Multi-Tenant Admin Portal.\n2. From the Multi-Tenant Portal's primary navigation bar, select the Organization you'd like to access.\n3. You will automatically be routed to that Organization's Admin Console.\n4. Go to Settings in the sub-tenant's primary navigation.\n5. You can obtain your Organization ID below your Organization's Contact Information on the Settings page.\n\n#### To Obtain All Organization IDs via the API\n\n1. You can make an API request to this endpoint using the API key of your Primary Organization.  `https://console.jumpcloud.com/api/organizations/` This will return all your managed organizations.\n\n#### Sample Request\n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/organizations/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
    "title": "JumpCloud APIs",
    "version": "1.0",
    "x-releaseTag": "v16.49.0"
  },
  "parameters": {
    "trait:fields:fields": {
      "default": "",
      "description": "Use a space seperated string of field parameters to include the data in the response. If omitted, the default list of fields will be returned.\n",
      "in": "query",
      "name": "fields",
      "type": "string"
    },
    "trait:filter:filter": {
      "description": "A filter to apply to the query. **Filter structure**: `<field>:<operator>:<value>`. **field** = Populate with a valid field from an endpoint response. **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in. **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards. **EX:** `GET /users?username=eq:testuser`",
      "in": "query",
      "name": "filter",
      "type": "string"
    },
    "trait:limit:limit": {
      "default": 10,
      "description": "The number of records to return at once. Limited to 100.",
      "in": "query",
      "name": "limit",
      "type": "integer"
    },
    "trait:search:search": {
      "description": "A nested object containing a string `searchTerm` and a list of `fields` to search on.",
      "in": "query",
      "name": "search",
      "type": "string"
    },
    "trait:skip:skip": {
      "default": 0,
      "description": "The offset into the records to return.",
      "in": "query",
      "minimum": 0,
      "name": "skip",
      "type": "integer"
    },
    "trait:sort:sort": {
      "default": "",
      "description": "Use space separated sort parameters to sort the collection.\nDefault sort is ascending. Prefix with `-` to sort descending.\n",
      "in": "query",
      "name": "sort",
      "type": "string"
    }
  },
  "paths": {
    "/application-templates": {
      "get": {
        "description": "The endpoint returns all the SSO / SAML Application Templates.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/application-templates \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "ApplicationTemplate_List",
        "parameters": [
          {
            "description": "The comma separated fields included in the returned records. If omitted the default list of fields will be returned.",
            "in": "query",
            "name": "fields",
            "type": "string"
          },
          {
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "type": "integer"
          },
          {
            "default": "The comma separated fields used to sort the collection. Default sort is ascending, prefix with - to sort descending.",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/applicationtemplateslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List Application Templates"
      },
      "parameters": []
    },
    "/application-templates/{id}": {
      "get": {
        "description": "The endpoint returns a specific SSO / SAML Application Template.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/application-templates/{id} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "ApplicationTemplate_Get",
        "parameters": [
          {
            "description": "The comma separated fields included in the returned records. If omitted the default list of fields will be returned.",
            "in": "query",
            "name": "fields",
            "type": "string"
          },
          {
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "type": "integer"
          },
          {
            "default": "The comma separated fields used to sort the collection. Default sort is ascending, prefix with - to sort descending.",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/applicationtemplate"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get an Application Template"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/applications": {
      "get": {
        "description": "The endpoint returns all your SSO / SAML Applications.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/applications \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "Application_List",
        "parameters": [
          {
            "description": "The comma separated fields included in the returned records. If omitted the default list of fields will be returned.",
            "in": "query",
            "name": "fields",
            "type": "string"
          },
          {
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "type": "integer"
          },
          {
            "description": "The comma separated fields used to sort the collection. Default sort is ascending, prefix with - to sort descending.",
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "name"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/applicationslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Applications"
      },
      "post": {
        "description": "The endpoint adds a new SSO / SAML Applications.",
        "operationId": "Application_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create an Application"
      }
    },
    "/applications/{id}": {
      "delete": {
        "description": "The endpoint deletes an SSO / SAML Application.",
        "operationId": "Application_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete an Application"
      },
      "get": {
        "description": "The endpoint retrieves an SSO / SAML Application.",
        "operationId": "Application_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get an Application"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "The endpoint updates a SSO / SAML Application.",
        "operationId": "Application_Set",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/application"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update an Application"
      }
    },
    "/command/trigger/{triggername}": {
      "parameters": [
        {
          "in": "path",
          "name": "triggername",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to launch a command based on a defined trigger.\n\n#### Sample Requests\n\n**Launch a Command via a Trigger**\n\n```\ncurl --silent \\\n     -X 'POST' \\\n     -H \"x-api-key: {API_KEY}\" \\\n     \"https://console.jumpcloud.com/api/command/trigger/{TriggerName}\"\n```\n**Launch a Command via a Trigger passing a JSON object to the command**\n```\ncurl --silent \\\n     -X 'POST' \\\n     -H \"x-api-key: {API_KEY}\" \\\n     -H 'Accept: application/json' \\\n     -H 'Content-Type: application/json' \\\n     -d '{ \"srcip\":\"192.168.2.32\", \"attack\":\"Cross Site Scripting Attempt\" }' \\\n     \"https://console.jumpcloud.com/api/command/trigger/{TriggerName}\"\n```",
        "operationId": "CommandTrigger_POST",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/triggerreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Launch a command via a Trigger"
      }
    },
    "/commandresults": {
      "get": {
        "description": "This endpoint returns all command results.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key:{API_KEY}'\n  ```",
        "operationId": "CommandResult_List",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          },
          {
            "$ref": "#/parameters/trait:sort:sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandresultslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List all Command Results"
      }
    },
    "/commandresults/{id}": {
      "delete": {
        "description": "This endpoint deletes a specific command result.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ````",
        "operationId": "CommandResult_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandresult"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a Command result"
      },
      "get": {
        "description": "This endpoint returns a specific command result.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commandresults/{CommandResultID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "CommandResult_Get",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandresult"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List an individual Command result"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/commands": {
      "get": {
        "description": "This endpoint returns all commands.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commands/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "Command_List",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          },
          {
            "$ref": "#/parameters/trait:sort:sort"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/commandslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List All Commands"
      },
      "post": {
        "description": "This endpoint allows you to create a new command.\n\n#### Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/commands/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"name\":\"Test API Command\",\n\t\"command\":\"String\",\n\t\"user\":\"{UserID}\",\n\t\"schedule\":\"\",\n\t\"timeout\":\"100\"\n}'\n\n```",
        "operationId": "Command_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create A Command"
      }
    },
    "/commands/{id}": {
      "delete": {
        "description": "This endpoint deletes a specific command based on the Command ID.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/commands/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "Command_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a Command"
      },
      "get": {
        "description": "This endpoint returns a specific command based on the command ID.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commands/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "Command_Get",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List an individual Command"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint Updates a command based on the command ID and returns the modified command record.\n\n#### Sample Request\n```\ncurl -X PUT https://console.jumpcloud.com/api/commands/{CommandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"name\":\"Test API Command\",\n\t\"command\":\"String\",\n\t\"user\":\"{UserID}\",\n\t\"schedule\":\"\",\n\t\"timeout\":\"100\"\n}'\n\n```",
        "operationId": "Command_Set",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/command"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update a Command"
      }
    },
    "/files/command/{id}": {
      "get": {
        "description": "This endpoint returns the uploaded file(s) associated with a specific command.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/files/command/{commandID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "CommandFile_Get",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/commandfilereturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get a Command File"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/organizations": {
      "get": {
        "description": "This endpoint returns Organization Details.\n\n#### Sample Request\n\n```\ncurl -X GET \\\n  https://console.jumpcloud.com/api/organizations \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "Organization_List",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:search:search"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          },
          {
            "$ref": "#/parameters/trait:sort:sort"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/organizationslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get Organization Details"
      }
    },
    "/organizations/{id}": {
      "get": {
        "description": "This endpoint returns a particular Organization.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/organizations/{OrganizationID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "Organization_Get",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/organization"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get an Organization"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update an Organization.\n\nNote: `passwordPolicy` settings are only used when `passwordCompliance` is set to \"custom\". We discourage the use of non-custom passwordCompliance values.\n\n`hasStripeCustomerId` is deprecated and will be removed.\n\n#### Sample Request\n\n```\ncurl -X PUT https://console.jumpcloud.com/api/organizations/{OrganizationID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"settings\": {\n    \"contactName\": \"Admin Name\",\n    \"contactEmail\": \"admin@company.com\",\n    \"systemUsersCanEdit\":true,\n    \"passwordPolicy\": {\n      \"enableMaxHistory\": true,\n      \"maxHistory\": 3\n    }\n  }\n}'\n```",
        "operationId": "Organization_Set",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "settings": {
                  "$ref": "#/definitions/organizationsettingsput"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/organization"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update an Organization"
      }
    },
    "/radiusservers": {
      "get": {
        "description": "This endpoint allows you to get a list of all RADIUS servers in your organization.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/radiusservers/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n```",
        "operationId": "RadiusServer_List",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          },
          {
            "$ref": "#/parameters/trait:sort:sort"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserverslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List Radius Servers"
      },
      "post": {
        "description": "This endpoint allows you to create RADIUS servers in your organization.\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/radiusservers/ \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"{test_radius}\",\n    \"networkSourceIp\": \"{0.0.0.0}\",\n    \"sharedSecret\":\"{secretpassword}\",\n    \"userLockoutAction\": \"REMOVE\",\n    \"userPasswordExpirationAction\": \"MAINTAIN\"\n}'\n```",
        "operationId": "RadiusServer_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/radiusserverpost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserver"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create a Radius Server"
      }
    },
    "/radiusservers/{id}": {
      "get": {
        "description": "This endpoint allows you to get a RADIUS server in your organization.\n\n####\n```\ncurl -X PUT https://console.jumpcloud.com/api/radiusservers/{ServerID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n```",
        "operationId": "RadiusServer_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserver"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Get Radius Server"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update RADIUS servers in your organization.\n\n####\n```\ncurl -X PUT https://console.jumpcloud.com/api/radiusservers/{ServerID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n    \"name\": \"{name_update}\",\n    \"networkSourceIp\": \"{0.0.0.0}\",\n    \"sharedSecret\": \"{secret_password}\",\n    \"userLockoutAction\": \"REMOVE\",\n    \"userPasswordExpirationAction\": \"MAINTAIN\"\n}'\n```",
        "operationId": "RadiusServer_Set",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "example": {
                "name": "test radius",
                "networkSourceIp": "0.0.0.0",
                "sharedSecret": "secretradiuspassword",
                "tagsNames": [
                  "tag1"
                ]
              },
              "properties": {
                "mfa": {
                  "enum": [
                    "DISABLED",
                    "ENABLED",
                    "REQUIRED",
                    "ALWAYS"
                  ],
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "networkSourceIp": {
                  "type": "string"
                },
                "userLockoutAction": {
                  "type": "string"
                },
                "userPasswordExpirationAction": {
                  "type": "string"
                },
                "sharedSecret": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "networkSourceIp",
                "sharedSecret"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/radiusserverput"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update Radius Servers"
      },
      "delete": {
        "description": "This endpoint allows you to delete RADIUS servers in your organization.\n```\ncurl -X DELETE https://console.jumpcloud.com/api/radiusservers/{ServerID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n```",
        "operationId": "RadiusServer_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/radiusserverput"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete Radius Server"
      }
    },
    "/search/organizations": {
      "post": {
        "description": "This endpoint will return Organization data based on your search parameters. This endpoint WILL NOT allow you to add a new Organization.\n\nYou can use the supported parameters and pass those in the body of request.\n\nThe parameters must be passed as Content-Type application/json.\n\n\n#### Sample Request\n```\ncurl -X POST https://console.jumpcloud.com/api/search/organizations \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"search\":{\n    \"fields\" : [\"settings.name\"],\n    \"searchTerm\": \"Second\"\n    },\n  \"fields\": [\"_id\", \"displayName\", \"logoUrl\"],\n  \"limit\" : 0,\n  \"skip\" : 0\n}'\n```",
        "operationId": "Organization_Search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          },
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/organizationslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Search Organizations"
      }
    },
    "/search/systems": {
      "post": {
        "description": "Return Systems in multi-record format allowing for the passing of the `filter` and `searchFilter` parameters. This WILL NOT allow you to add a new system.\n\nTo support advanced filtering you can use the `filter` and `searchFilter` parameters that can only be passed in the body of POST /api/search/* routes. The `filter` and `searchFilter` parameters must be passed as Content-Type application/json.\n\nThe `filter` parameter is an object with a single property, either `and` or `or` with the value of the property being an array of query expressions.\n\nThis allows you to filter records using the logic of matching ALL or ANY records in the array of query expressions. If the `and` or `or` are not included the default behavior is to match ALL query expressions.\n\nThe `searchFilter` parameter allows text searching on supported fields by specifying a `searchTerm` and a list of `fields` to query on. If any `field` has a partial text match on the`searchTerm` the record will be returned.\n\n\n#### Sample Request\n\nExact search for a list of hostnames\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"filter\": {\n    \"or\": [\n      {\"hostname\" : \"my-hostname\"},\n      {\"hostname\" : \"other-hostname\"}\n    ]\n  },\n  \"fields\" : \"os hostname displayName\"\n}'\n```\n\nText search for a hostname or display name\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"my-host\",\n    \"fields\": [\"hostname\", \"displayName\"]\n  },\n  \"fields\": \"os hostname displayName\"\n}'\n```\n\nCombining `filter` and `searchFilter` to search for names that match a given OS\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"my-host\",\n    \"fields\": [\"hostname\", \"displayName\"]\n  },\n  \"filter\": {\n    \"or\": [\n      {\"os\" : \"Ubuntu\"},\n      {\"os\" : \"Mac OS X\"}\n    ]\n  },\n  \"fields\": \"os hostname displayName\"\n}'\n```",
        "operationId": "System_Search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          },
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Search Systems"
      }
    },
    "/search/systemusers": {
      "post": {
        "description": "Return System Users in multi-record format allowing for the passing of the `filter` and `searchFilter` parameters. This WILL NOT allow you to add a new system user.\n\nTo support advanced filtering you can use the `filter` and `searchFilter` parameters that can only be passed in the body of POST /api/search/* routes. The `filter` and `searchFilter` parameters must be passed as Content-Type application/json.\n\nThe `filter` parameter is an object with a single property, either `and` or `or` with the value of the property being an array of query expressions.\n\nThis allows you to filter records using the logic of matching ALL or ANY records in the array of query expressions. If the `and` or `or` are not included the default behavior is to match ALL query expressions.\n\nThe `searchFilter` parameter allows text searching on supported fields by specifying a `searchTerm` and a list of `fields` to query on. If any `field` has a partial text match on the`searchTerm` the record will be returned.\n\n\n#### Sample Request\n\nExact search for a list of system users in a department\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"filter\" : [{\"department\" : \"IT\"}],\n  \"fields\" : \"email username sudo\"\n}'\n```\n\nText search for system users with and email on a domain\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\" : {\n    \"searchTerm\": \"@jumpcloud.com\",\n    \"fields\": [\"email\"]\n  },\n  \"fields\" : \"email username sudo\"\n}'\n```\n\nCombining `filter` and `searchFilter` to text search for system users with and email on a domain who are in a list of departments\n```\ncurl -X POST https://console.jumpcloud.com/api/search/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n  \"searchFilter\": {\n    \"searchTerm\": \"@jumpcloud.com\",\n    \"fields\": [\"email\"]\n  },\n  \"filter\": {\n    \"or\": [\n      {\"department\" : \"IT\"},\n      {\"department\" : \"Sales\"}\n    ]\n  },\n  \"fields\" : \"email username sudo\"\n}'\n```",
        "operationId": "User_Search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/search"
            }
          },
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Search System Users"
      }
    },
    "/systems": {
      "get": {
        "description": "This endpoint returns all Systems.\n\n#### Sample Requests\n```\ncurl -X GET https://console.jumpcloud.com/api/systems \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n\n```",
        "operationId": "System_List",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:limit:limit"
          },
          {
            "$ref": "#/parameters/trait:search:search"
          },
          {
            "$ref": "#/parameters/trait:skip:skip"
          },
          {
            "$ref": "#/parameters/trait:sort:sort"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/systemslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List All Systems"
      }
    },
    "/systems/{id}": {
      "delete": {
        "description": "This endpoint allows you to delete a system. This command will cause the system to uninstall the JumpCloud agent from its self which can can take about a minute. If the system is not connected to JumpCloud the system record will simply be removed.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "System_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JcSystem"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a System"
      },
      "get": {
        "description": "This endpoint returns an individual system.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ```",
        "operationId": "System_Get",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JcSystem"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List an individual system"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update a system.\n\n#### Sample Request \n```\ncurl -X PUT https://console.jumpcloud.com/api/systems/{SystemID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"displayName\":\"Name_Update\",\n\t\"allowSshPasswordAuthentication\":\"true\",\n\t\"allowSshRootLogin\":\"true\",\n\t\"allowMultiFactorAuthentication\":\"true\",\n\t\"allowPublicKeyAuthentication\":\"false\"\n}'\n```",
        "operationId": "System_Set",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/systemput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JcSystem"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update a system"
      }
    },
    "/systemusers": {
      "get": {
        "description": "This endpoint returns all systemusers.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "User_List",
        "parameters": [
          {
            "default": 10,
            "description": "The number of records to return at once.",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": 0,
            "description": "The offset into the records to return.",
            "in": "query",
            "name": "skip",
            "type": "integer"
          },
          {
            "default": "",
            "description": "The comma separated fields used to sort the collection.\nDefault sort is ascending, prefix with `-` to sort descending.\n",
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "default": "",
            "description": "The comma separated fields included in the returned records.\nIf omitted the default list of fields will be returned.\n",
            "in": "query",
            "name": "fields",
            "type": "string"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          },
          {
            "$ref": "#/parameters/trait:search:search"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserslist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List all system users"
      },
      "post": {
        "description": "This endpoint allows you to create a new system user.\n\n#### Sample Request\n\n```\ncurl -X POST https://console.jumpcloud.com/api/systemusers \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"username\":\"{username}\",\n\t\"email\":\"{email_address}\",\n\t\"firstname\":\"{Name}\",\n\t\"lastname\":\"{Name}\"\n}'\n```",
        "operationId": "User_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/systemuserputpost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User added successfully",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create a system user"
      }
    },
    "/systemusers/{id}": {
      "delete": {
        "description": "This endpoint allows you to delete a particular system user.\n\n#### Sample Request\n```\ncurl -X DELETE https://console.jumpcloud.com/api/systemusers/{UserID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "User_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a system user"
      },
      "get": {
        "description": "This endpoint returns a particular System User.\n\n#### Sample Request\n\n```\ncurl -X GET https://console.jumpcloud.com/api/systemusers/{UserID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n```",
        "operationId": "User_Get",
        "parameters": [
          {
            "$ref": "#/parameters/trait:fields:fields"
          },
          {
            "$ref": "#/parameters/trait:filter:filter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List a system user"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "description": "This endpoint allows you to update a system user.\n\n#### Sample Request\n\n```\ncurl -X PUT https://console.jumpcloud.com/api/systemusers/{UserID} \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\n\t\"email\":\"{email_address}\",\n\t\"firstname\":\"{Name}\",\n\t\"lastname\":\"{Name}\"\n}'\n```",
        "operationId": "User_Set",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/systemuserput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/systemuserreturn"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Update a system user"
      }
    },
    "/systemusers/{id}/expire": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to expire a user's password.",
        "operationId": "ExpireUserPassword_POST",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Expire a system user's password"
      }
    },
    "/systemusers/{id}/resetmfa": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to reset the TOTP key for a specified system user and put them in an TOTP MFA enrollment period. This will result in the user being prompted to setup TOTP MFA when logging into userportal. Please be aware that if the user does not complete TOTP MFA setup before the `exclusionUntil` date, they will be locked out of any resources that require TOTP MFA.\n\nPlease refer to our [Knowledge Base Article](https://support.jumpcloud.com/customer/en/portal/articles/2959138-using-multifactor-authentication-with-jumpcloud) on setting up MFA for more information.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systemusers/{UserID}/resetmfa \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d '{\"exclusion\": true, \"exclusionUntil\": \"{date-time}\"}'\n\n```",
        "operationId": "UserMfa_Reset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "exclusion": {
                  "type": "boolean"
                },
                "exclusionUntil": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Reset a system user's MFA token"
      }
    },
    "/systemusers/{id}/sshkeys": {
      "get": {
        "description": "This endpoint will return a specific System User's public SSH key.",
        "operationId": "UserSshKey_Get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "items": {
                "$ref": "#/definitions/sshkeylist"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List a system user's public SSH keys"
      },
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint will create a specific System User's Public SSH Key.",
        "operationId": "UserSshKey_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/sshkeypost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/sshkeylist"
            }
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Create a system user's Public SSH Key"
      }
    },
    "/systemusers/{id}/unlock": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "description": "This endpoint allows you to unlock a user's account.",
        "operationId": "User_Unlock",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Unlock a system user"
      }
    },
    "/systemusers/{systemuser_id}/sshkeys/{id}": {
      "delete": {
        "description": "This endpoint will delete a specific System User's SSH Key.",
        "operationId": "UserSshKey_Delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Delete a system user's Public SSH Keys"
      },
      "parameters": [
        {
          "in": "path",
          "name": "systemuser_id",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/commands/{id}/results": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get results for a specific command",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        },
        "operationId": "CommandResult_Get",
        "description": "This endpoint returns results for a specific command.\n\n#### Sample Request\n```\ncurl -X GET https://console.jumpcloud.com/api/commands/{id}/results \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}'\n  ````",
        "security": [
          {
            "x-api-key": []
          }
        ]
      }
    },
    "/systems/{system_id}/command/builtin/erase": {
      "parameters": [
        {
          "type": "string",
          "name": "system_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the erase command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/erase \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "System_Clear",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Erase a System"
      }
    },
    "/systems/{system_id}/command/builtin/lock": {
      "parameters": [
        {
          "type": "string",
          "name": "system_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the lock command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/lock \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "System_Lock",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Lock a System"
      }
    },
    "/systems/{system_id}/command/builtin/restart": {
      "parameters": [
        {
          "type": "string",
          "name": "system_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the restart command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/restart \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "System_Restart",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Restart a System"
      }
    },
    "/systems/{system_id}/command/builtin/shutdown": {
      "parameters": [
        {
          "type": "string",
          "name": "system_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "description": "This endpoint allows you to run the shutdown command on the specified device. If a device is offline, the command will be run when the device becomes available.\n\n#### Sample Request\n```\ncurl -X POST \\\n  https://console.jumpcloud.com/api/systems/{system_id}/command/builtin/shutdown \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: {API_KEY}' \\\n  -d {}\n```",
        "operationId": "System_Stop",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Command created"
          }
        },
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "Shutdown a System"
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "trait:standardErrors:400": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "trait:standardErrors:401": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "trait:standardErrors:403": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "trait:standardErrors:404": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "trait:standardErrors:409": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "trait:standardErrors:500": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "x-api-key": {
      "in": "header",
      "name": "x-api-key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0"
}
