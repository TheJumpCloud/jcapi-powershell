version: 2.1
orbs:
  win: circleci/windows@2.2.0
commands:
  setup:
    steps:
      - add_ssh_keys:
          fingerprints:
            - '14:78:b4:7b:f0:bb:3b:ef:a7:ba:06:49:87:50:79:e9'
      - checkout
      - run:
          name: Display Session Variables (For Debugging)
          shell: pwsh.exe
          command: ./Tools/Get-SessionVariables.ps1
      - run:
          name: Install PowerShell Core
          command: dotnet tool install --global PowerShell
      - run:
          name: Install Required Module(s)
          shell: pwsh.exe
          command: |
            Install-Module -Name:('BuildHelpers','powershell-yaml','PSScriptAnalyzer') -Force
            Install-Module -Name Pester -RequiredVersion '4.10.1' -Force
            npm install -g autorest@latest
            autorest --reset
          # autorest --help
      # TODO: ADD: dotnet-sdk-3.1-win-x64, dotnet-sdk-3.1-osx-x64, dotnet-sdk-3.1-linux-x64
  build:
    parameters:
      SDKName:
        description: Name of the SDK to generate
        type: string
      ManualModuleVersion:
        description: ''
        type: string
        default: ''
      JCApiKey:
        description: API key of the JumpCloud organization to run tests against
        type: string
      JCOrgId:
        description: Organization id of the JumpCloud organization to run tests against
        type: string
      GitHubAccessToken:
        description: GitHub Access Token used to pull the latest version of the swagger spec
        type: string
      BuildModuleOverride:
        description: ''
        type: boolean
        default: false
      RunApiTransform:
        description: ''
        type: boolean
        default: true
      TestModule:
        description: ''
        type: boolean
        default: true
    steps:
      - run:
          when: always
          name: Building '<< parameters.SDKName >>'
          shell: pwsh.exe
          command: |
            Write-Host (Get-ChildItem | Select Name)
            # $ErrorActionPreference = 'Stop'
            # ./BuildAutoRest.ps1 -SDKName:('<< parameters.SDKName >>') -JCApiKey:('<< parameters.JCApiKey >>') -JCOrgId:('<< parameters.JCOrgId >>') -GitHubAccessToken:('<< parameters.GitHubAccessToken >>') -ManualModuleVersion:('<< parameters.ManualModuleVersion >>') -BuildModuleOverride:($<< parameters.BuildModuleOverride >>) -RunApiTransform:($<< parameters.RunApiTransform >>) -TestModule:($<< parameters.TestModule >>)
      - store_test_results:
          path: SDKs/PowerShell/<< parameters.SDKName >>/test/results
      # - run:
      #     name: Publishing to GitHub Packages
      #     shell: pwsh.exe
      #     command: |
      #       $NupkgPath = (Get-ChildItem -Path:(".\SDKs\<< parameters.SDKName >>\bin\<< parameters.SDKName >>*.nupkg")).FullName
      #       $GitHubPackagesURL = "https://nuget.pkg.github.com/$($env:CIRCLE_PROJECT_USERNAME)/$($env:CIRCLE_PROJECT_REPONAME)/index.json"
      #       dotnet nuget push "$NupkgPath" --source "$GitHubPackagesURL" --api-key "$(GH_TOKEN)"
jobs:
  'Build JumpCloud PowerShell SDKs':
    executor: win/default
    steps:
      - setup
      - build:
          SDKName: JumpCloud.SDK.DirectoryInsights
          JCApiKey: $JCApiKey
          JCOrgId: $JCOrgId
          GitHubAccessToken: $GitHubAccessToken
          ManualModuleVersion: ''
          BuildModuleOverride: true
          RunApiTransform: true
          TestModule: true
      # - build:
      #     SDKName: JumpCloud.SDK.V1
      #     JCApiKey: $JCApiKey
      #     JCOrgId: $JCOrgId
      #     GitHubAccessToken: $GitHubAccessToken
      #     ManualModuleVersion: ''
      #     BuildModuleOverride: true
      #     RunApiTransform: true
      #     TestModule: true
      # - build:
      #     SDKName: JumpCloud.SDK.V2
      #     JCApiKey: $JCApiKey
      #     JCOrgId: $JCOrgId
      #     GitHubAccessToken: $GitHubAccessToken
      #     ManualModuleVersion: ''
      #     BuildModuleOverride: true
      #     RunApiTransform: true
      #     TestModule: true
      # - deploy:
      #     when: on_success
      #     name: 'Commit PowerShell SDKs to << pipeline.git.branch >>'
      #     shell: pwsh.exe
      #     command: |
      #       $UserEmail = If ($env:CIRCLE_PROJECT_USERNAME) { $env:CIRCLE_PROJECT_USERNAME } Else { ($env:USERNAME).Replace(' ', '') + '@FakeEmail.com' }
      #       $UserName = If ($env:CIRCLE_PROJECT_USERNAME) { $env:CIRCLE_PROJECT_USERNAME } Else { $env:USERNAME }
      #       git config user.email "$UserEmail"
      #       git config user.name "$UserName"
      #       git add -A
      #       git status
      #       git commit -m "Updating PowerShell SDKs;[skip ci]"
      #       git push origin << pipeline.git.branch >>
workflows:
  version: 2
  build-sdks:
    jobs:
      - 'Build JumpCloud PowerShell SDKs'
  build-sdks-nightly:
    triggers:
      - schedule:
          cron: '0 0 * * *' # Run Nightly
          filters:
            branches:
              only:
                - master
    jobs:
      - 'Build JumpCloud PowerShell SDKs'
