{
  "basePath": "/insights/directory/v1/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ErrorMessage": {
      "properties": {
        "message": {
          "description": "Text detailed error message returned by the service",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventQuery": {
      "description": "EventQuery is the users' command to search our auth logs",
      "properties": {
        "end_time": {
          "description": "optional query end time, UTC in RFC3339 format",
          "type": "string"
        },
        "fields": {
          "description": "optional list of fields to return from query",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "limit": {
          "description": "Max number of rows to return",
          "format": "int64",
          "type": "integer"
        },
        "search_after": {
          "description": "Specific query to search after, see x-* response headers for next values",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "search_term": {
          "$ref": "#/definitions/SearchTerm"
        },
        "service": {
          "description": "service name to query. Known services: systems,radius,sso,directory,ldap,all",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sort": {
          "description": "ASC or DESC order for timestamp",
          "type": "string"
        },
        "start_time": {
          "description": "query start time, UTC in RFC3339 format",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchTerm": {
      "description": "SearchTerm is the filter portion of the query",
      "properties": {
        "and": {
          "additionalProperties": {
            "$ref": "#/definitions/TermItem"
          },
          "description": "list of event terms. If all terms match the event will be returned by the service.",
          "type": "object"
        },
        "or": {
          "additionalProperties": {
            "$ref": "#/definitions/TermItem"
          },
          "description": "list of event terms. If any term matches, the event will be returned by the service.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "TermItem": {
      "description": "TermItem  one term in an and/or query, or one in an array of terms\nitems in the Terms array can be\n1) a simple KV pair \"username\": \"root\"\n2) a key-array pair \"username\": [ \"root\", \"admin\"]\nin every case, they are key-value pairs,\nso they can be stored in a map by their parent object",
      "type": "object"
    }
  },
  "host": "api.jumpcloud.com",
  "info": {
    "contact": {
      "email": "support@jumpcloud.com"
    },
    "description": "The purpose of this API is to query Jumpcloud Directory Insights events",
    "title": "Directory Insights API",
    "version": "0.39.0"
  },
  "paths": {
    "/events": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Query the API for Directory Insights events",
        "operationId": "Events_Get",
        "parameters": [
          {
            "description": "JSON event query body",
            "in": "body",
            "name": "EventQueryBody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventQuery"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Array of Directory Insights events JSON objects",
            "schema": {
              "items": {
                "additionalProperties": true,
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Invalid/unknown query JSON body",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized (Invalid API Key)",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "402": {
            "description": "Directory Insights is not enabled for your organization",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Technical difficulties processing your request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "summary": "Query Events",
        "tags": [
          "EventQuery"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}
